<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Powersee的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://powersee.github.io/"/>
  <updated>2021-02-14T04:05:56.916Z</updated>
  <id>https://powersee.github.io/</id>
  
  <author>
    <name>powersee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>about-zhangyuxingqiu</title>
    <link href="https://powersee.github.io/2021/02/about-zhangyuxingqiu/"/>
    <id>https://powersee.github.io/2021/02/about-zhangyuxingqiu/</id>
    <published>2021-02-14T04:05:56.000Z</published>
    <updated>2021-02-14T04:05:56.916Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>玩客云第二版固件说明</title>
    <link href="https://powersee.github.io/2021/02/wankeyun-2/"/>
    <id>https://powersee.github.io/2021/02/wankeyun-2/</id>
    <published>2021-02-01T07:05:09.000Z</published>
    <updated>2021-02-02T11:34:26.922Z</updated>
    
    <content type="html"><![CDATA[<p>玩客云第二版固件已经发布。</p><p><img src="\img\2021\wky-2.jpg" alt="wky-2"></p><p>下载链接和上一版一样。</p><p>固件和刷机工具下载链接</p><p>链接：<a href="https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA" target="_blank" rel="noopener">https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA</a><br>提取码：6666 </p><p>解压出来，名字是 <code>Armbian_s805_powersee_2021-01-31.img</code>  </p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>第二版的介绍已发布视频到 B站</p><p><a href="https://www.bilibili.com/video/BV1kT4y1P7RL?p=5" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1kT4y1P7RL?p=5</a></p><hr><p>博客用来作为补充和方便大家查询。</p><p>第二版更改了 led。开机后，灯自动熄灭，但是网口的灯是亮着的，而且一般网口两个灯都是亮着的。</p><p><img src="\img\2021\2021-02-02_19-29-14.jpg" alt="2021-02-02_19-29-14"></p><p>可以通过这来判断机器有没有进入U盘中的系统。</p><p>qbittorrent 使用原生安装，而不使用 docker 了。并且默认下载路径设置为 <code>/mnt</code> ，下载之前请注意网页底部显示的 <code>剩余磁盘空间</code> 。</p><p>添加了 Aria2 ，使用的是 P3TERX 大佬制作的<a href="https://github.com/P3TERX/aria2.sh" target="_blank" rel="noopener">一键脚本</a>安装的。rpc 密钥是：12345</p><p>启动：<code>/etc/init.d/aria2 start</code> | <code>service aria2 start</code></p><p>停止：<code>/etc/init.d/aria2 stop</code> | <code>service aria2 stop</code></p><p>重启：<code>/etc/init.d/aria2 restart</code> | <code>service aria2 restart</code></p><hr><p>smb 添加多一个共享文件夹 <code>mnt-rw</code> ，访问路径依然是 <code>/mnt</code> ，这个文件夹需要账号密码才可以访问，账号 <code>root</code>，密码 <code>1234</code> </p><hr><h3 id="led-灯的控制"><a href="#led-灯的控制" class="headerlink" title="led 灯的控制"></a>led 灯的控制</h3><p>开机之后，系统会执行 <code>ledoff blue</code> 来关闭灯光。</p><p>如果想自己控制灯光，可以用 <code>ledon blue</code> 来打开蓝灯。打开绿灯就是 <code>ledon green</code>，红灯 <code>ledon red</code> 。关闭的话，就是将 <code>ledon</code> 换为 <code>ledoff</code></p><p>如果想要在 python 脚本中控制它，可以这样用</p><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"><span class="built_in">os</span>.system(<span class="string">"ledon green"</span>)</span><br></pre></td></tr></table></figure><h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p>1、<a href="https://www.right.com.cn/forum/thread-2881296-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-2881296-1-1.html</a></p><p>2、<a href="https://github.com/P3TERX/aria2.sh" target="_blank" rel="noopener">https://github.com/P3TERX/aria2.sh</a></p><p>3、<a href="https://github.com/qbittorrent/qBittorrent/wiki" target="_blank" rel="noopener">https://github.com/qbittorrent/qBittorrent/wiki</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;玩客云第二版固件已经发布。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;\img\2021\wky-2.jpg&quot; alt=&quot;wky-2&quot;&gt;&lt;/p&gt;
&lt;p&gt;下载链接和上一版一样。&lt;/p&gt;
&lt;p&gt;固件和刷机工具下载链接&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;https://pan.bai
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>玩客云导航固件使用说明</title>
    <link href="https://powersee.github.io/2021/01/wankeyun-server/"/>
    <id>https://powersee.github.io/2021/01/wankeyun-server/</id>
    <published>2021-01-26T00:46:22.000Z</published>
    <updated>2021-02-16T04:14:14.485Z</updated>
    
    <content type="html"><![CDATA[<h3 id="玩客云乱七八糟的坑"><a href="#玩客云乱七八糟的坑" class="headerlink" title="玩客云乱七八糟的坑"></a>玩客云乱七八糟的坑</h3><p>搞了一个腾讯文档，懒得复制过来了，已经设置了任何人都可以访问，可以在里面看看有没有适合自己的解决方案。</p><p><a href="https://docs.qq.com/doc/DWkhNSmRuQld0UEd0" target="_blank" rel="noopener">https://docs.qq.com/doc/DWkhNSmRuQld0UEd0</a></p><h3 id="为什么我的主板和你不一样？"><a href="#为什么我的主板和你不一样？" class="headerlink" title="为什么我的主板和你不一样？"></a>为什么我的主板和你不一样？</h3><p>有些小伙伴看了视频，非常激动地跑去买玩客云，买来拆开后却发现，怎么和视频里的不一样呢？难道是被坑了？</p><p>其实不用慌，这是因为玩客云有分两版，我视频里展示的是老版，它的短接点是在主板的背面。</p><p><img src="\img\2020\玩客云短接.png" alt="玩客云短接"></p><p>另外还有一款新版，短接点是在正面。</p><p><img src="\img\2021\玩客云新版短接点.jpg" alt="玩客云新版短接点"></p><p><img src="\img\2021\玩客云新版短接点45.jpg" alt="玩客云新版短接点45"></p><p>刷机方式一样的。</p><h3 id="为什么没有进入-U-盘中的系统？"><a href="#为什么没有进入-U-盘中的系统？" class="headerlink" title="为什么没有进入 U 盘中的系统？"></a>为什么没有进入 U 盘中的系统？</h3><p>如果你发现 led 灯每隔几秒就闪一下，那可能是你 U 盘没有插在靠近网口的 USB 口。</p><p><img src="\img\2021\wky-usb-1613448634572.png" alt="wky-usb"></p><p>如果这样还不行，你可以尝试换一个 U 盘，如果有内存卡加读卡器的话，也可以试试。</p><h3 id="总结一下玩客云的优劣"><a href="#总结一下玩客云的优劣" class="headerlink" title="总结一下玩客云的优劣"></a>总结一下玩客云的优劣</h3><p>优点</p><ul><li>便宜</li><li>省电，之前测试过功耗只有 1.5 w 左右</li><li>静音，没有风扇，自然不会有噪音</li></ul><p>缺点</p><ul><li>性能较弱</li><li>cpu 是 32 位的，能用的 docker 镜像有限</li><li>usb 2.0 速度慢</li></ul><p>由于这次视频的播放量还可以，很多没有关注我的观众在评论区里留言，说 N1 、树莓派这些比玩客云强。我当然知道这些比玩客云强啊，因为大多数矿渣设备我都有买，有兴趣的朋友可以去翻翻我以前的视频。</p><p>其实不用看参数也能知道 N1 、树莓派 这些比玩客云强，看价格就行呗。N1 现在应该要一百多，树莓派得两百多。所以没什么可比性嘛。</p><hr><h3 id="固件相关"><a href="#固件相关" class="headerlink" title="固件相关"></a>固件相关</h3><p>2021-01-25</p><p><img src="\img\2021\玩客云导航.jpg" alt="玩客云导航"></p><p>固件和刷机工具下载链接</p><p>链接：<a href="https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA" target="_blank" rel="noopener">https://pan.baidu.com/s/1BNwv61YDj3b4r3IjmJjheA</a><br>提取码：6666 </p><p>访问导航：直接在浏览器输入 onecloud/ 或者输入玩客云的 ip 地址。</p><hr><p>文件管理器：账号密码都是 admin</p><p>portainer : 账号 admin 密码 powersee</p><p>transmission : 账号密码都是 admin</p><p>qbittorrent : 账号 admin 密码 adminadmin</p><p>ssh ：账号 root 密码 powersee233</p><hr><p>qiandao 这个容器并没有设置开机启动，如果想启动它，可以在 portainer 中启动，或者通过 ssh 使用</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">docker <span class="literal">start</span> qiandao</span><br></pre></td></tr></table></figure><p>来启动。</p><p>这个自动签到平台我以前也有做过视频，有兴趣可以去翻翻看。</p><hr><h3 id="关于-SD-卡"><a href="#关于-SD-卡" class="headerlink" title="关于 SD 卡"></a>关于 SD 卡</h3><p>挂载 SD 卡有一点需要注意，有些卡套可能会有问题。插上去后，可以读取到 disk ，但是读取不到 part ，所以没法挂载。质量好的卡套，应该是可以显示 disk 和 part 的，如下图所示。</p><p><img src="\img\2021\挂载 sd 卡.png" alt="挂载 sd 卡"></p><hr><p>系统装有 python3 和 pip3，同时我还安装了一个命令行的文件管理器 ranger，在终端输入 <code>ranger</code> 就可以打开这样的界面。</p><p><img src="\img\2021\ranger.jpg" alt="ranger"></p><p>按 q 退出</p><hr><h3 id="如何判断有没有刷成功"><a href="#如何判断有没有刷成功" class="headerlink" title="如何判断有没有刷成功"></a>如何判断有没有刷成功</h3><p>其实可以用通过玩客云的 hdmi 来判断，你可以把玩客云连接电视或者显示器。</p><p>当你刷好底层包之后，不插U盘，画面会显示这个几秒</p><p><img src="\img\2021\玩客云mxq.png" alt="玩客云mxq"></p><p>然后就没信号几秒，再显示这个画面几秒，再没信号……会这样一直重复。</p><p>如果你插上U盘，并且玩客云成功进入 U 盘里的系统，画面就会停留在上面这个图片这里，不会变化了。所以你可以通过这种方法来判断有没有成功进入 U 盘系统。</p><hr><h3 id="一直线刷失败？"><a href="#一直线刷失败？" class="headerlink" title="一直线刷失败？"></a>一直线刷失败？</h3><p>症状是什么呢？无法刷入 snail 底层包，也无法刷入 emmc 直刷包，线刷最后永远报错。这里有一张网友线刷失败的图片。</p><p><img src="\img\2021\wky-fail1.png" alt="wky-fail1"></p><p>里面的结果这一列，有好多个 5004。然后最近我收了一台有问题的玩客云，下午线刷，发现也是一堆 5004 的报错。所以我估计，可能报 5004 的，应该就是 emmc 有坏块，毕竟症状一样。</p><p>到目前为止，我见识过 4 台设备这样，我自己手上就有一台。唯有一个底层包可以刷，是一个 700多K的 img 包，我将它上传到了网盘。<a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a> </p><p><img src="\img\2021\wky-pan1.png" alt="wky-pan1"></p><p>使用这个底层包，可以线刷进去。</p><p><img src="\img\2021\wky-线刷成功.png" alt="wky-线刷成功"></p><p>刷这个 700 多k 的底层包，开机是亮绿灯。由于 emmc 损坏，因此系统只能装在 U 盘里面使用。</p><h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><ol><li><p><a href="https://www.right.com.cn/forum/thread-4057492-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-4057492-1-1.html</a></p></li><li><p><a href="https://github.com/AragonSnow/qiandao" target="_blank" rel="noopener">https://github.com/AragonSnow/qiandao</a></p></li><li><p><a href="https://github.com/bituplink/OneHtmlNav" target="_blank" rel="noopener">https://github.com/bituplink/OneHtmlNav</a></p></li><li><p><a href="https://www.right.com.cn/forum/thread-4058499-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-4058499-1-1.html</a></p></li><li><a href="https://www.right.com.cn/FORUM/thread-4066518-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/FORUM/thread-4066518-1-1.html</a></li></ol><h3 id="下期内容"><a href="#下期内容" class="headerlink" title="下期内容"></a>下期内容</h3><p>下一个版本会添加的内容</p><p>1、网页终端</p><p><img src="\img\2021\wky-ttyd.png" alt="wky-ttyd"></p><p>2、portainer 中文化</p><p><img src="\img\2021\portainer汉化.png" alt="portainer汉化"></p><p>3、添加控制 led 功能</p><p>默认情况下，开机后会一直亮蓝灯。其实没什么用，我打算把这灯利用起来，所以设置了开机进入系统后，灯光会自动关闭。然后这灯就可以跑脚本的时候用。例如用 python 脚本来控制它，让它亮绿灯之类的。以后再说吧。</p><p><img src="\img\2021\wky-green.jpg" alt="wky-green"></p><p>4、aria2</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;玩客云乱七八糟的坑&quot;&gt;&lt;a href=&quot;#玩客云乱七八糟的坑&quot; class=&quot;headerlink&quot; title=&quot;玩客云乱七八糟的坑&quot;&gt;&lt;/a&gt;玩客云乱七八糟的坑&lt;/h3&gt;&lt;p&gt;搞了一个腾讯文档，懒得复制过来了，已经设置了任何人都可以访问，可以在里面看看有没有适
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>IOS 设备备份相册与文件到 NAS</title>
    <link href="https://powersee.github.io/2020/12/ios-backup-photos/"/>
    <id>https://powersee.github.io/2020/12/ios-backup-photos/</id>
    <published>2020-12-18T12:14:59.000Z</published>
    <updated>2020-12-20T06:35:57.886Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来，我都是用安卓手机，特别是小米的手机，已经用了很多年了。一开始的照片也不多，用小米自带的云服务备份即可。后来照片有点多了，小米云服务免费的 5G 空间已经不够用了。</p><p>我开始尝试其它的备份方案，比如电脑和手机都安装 handshaker 这个软件，可以自动将图片备份到电脑里。电脑里现在还存放着两年多前备份的手机图片。</p><p><img src="\img\2020\handshaker-photos.png" alt="handshaker-photos"></p><p>好像备份了一两次我就不用了，不是我想要的备份方案。后来我还尝试使用 Google photos 备份，也觉得不好用。都不是我想要的。</p><p>后来我接触到 syncthing 这个开源软件。感觉它才是最符合我需求的，它其实是一个同步软件，网上有很多人称它为网盘并不准确。其原理是这样，我手机上面选中一个文件夹，通过这个软件，就可以把里面的文件备份到其它的设备，比如其它的手机、电脑或者 NAS。</p><p>所以在安卓手机上，我只要选中 DCIM 这个文件夹，就可以把手机里面拍摄的图片、视频以及截图备份到其它设备。但是有一些图片，是通过微信保存到手机里的，并不在 DCIM 这个文件夹中。这也不难解决，再选中一个文件夹即可 <code>tencent\MircoMsg\WeiXin</code> 。但是，这款应用并没有 IOS 版……</p><p>所以当我买了台二手的 ipad 后，我发现没法用 syncthing 来备份里面文件，我只能去寻找替代品。于是我找到了这么一款——微力同步（verysync）。这是一款国产的应用，也是支持多平台的同步应用。当我第一次接触它时，我严重怀疑它是拿开源的 syncthing 去换皮的。</p><p><img src="\img\2020\syncthing-and-verysync.png" alt="syncthing-and-verysync"></p><p>它的使用方法和 syncthing 差不多，不过它有一个不错的地方，就是它分享文件夹，不需要像 syncthing 那样先让两台设备建立关系（有点像微信互相添加好友），微力同步可以将要分享的文件夹通过密钥或者链接分享出去。比如我手机里想将相册这个文件夹同步到电脑，那么我只要让它生成一个链接，将链接发到电脑，电脑点击后就可以将文件同步过来了。</p><p>如果是电脑想分享给手机，除了上述的链接和密钥，还可以通过二维码分享，只要扫这个二维码，就可以将电脑的文件同步到手机里。</p><p><img src="\img\2020\verysync-share.png" alt="verysync-share"></p><p>所以我后来就慢慢的使用微力同步代替 syncthing 了，感觉它用起来方便点，而且也都是免费的。然后我还了解到它还有 IOS 版，就想用它来备份 iPad 的相册到 NAS 里。结果却发现，它在其它所有平台都是免费的，唯独在 ios 上是收费的，价格 12 块。</p><p>抱着价格也不贵的心态，而我也使用了有一段时间了，我也就买一份支持一下。</p><p><img src="\img\2020\ios-appstore-verysync.PNG" alt="ios-appstore-verysync"></p><p>不过后来我又发现了一款功能差不多，而且可以免费用的 app —— resilio sync 。并且我这时才知道，原来微力同步的那些功能都是从这里学来的。</p><p><img src="\img\2020\resilio-option.png" alt="resilio-option"></p><p>这软件以前叫 btsync ，感觉像是 BT 的变种。最早的 BT 是，比如我有一部电影想分享给朋友，我可以为这部电影制作一个种子（torrent 文件），我只要电脑不关，保持做种状态，并把这个种子文件发给其他人。其他人只要能连接到我的电脑，就能下载我电脑里的这部电影。</p><p>而这个 btsync 可以省去制作种子和传播种子文件的过程，直接发给别人一个链接或一个密钥就行。但其实 BT 也可以省去传播种子文件的过程，发磁力链接就行呗。但是有一点 BT 就做不到了，那就是更新，btsync 可以分享一个文件夹，比如现在里面是一个文件 <code>xxxS01E01.mp4</code> ，是某部电视剧的第一集，其他人得到这个分享链接或密钥，就可以下载到。但如果下个星期出第二集了，其他人不需要进行任何操作，就可以下载到第二集 <code>xxxS01E02.mp4</code> ，因为这个分享文件夹更新了。</p><p>但是用 BT 就做不到，只能等出第二集了，再做一个 BT 种子，分享给其他人才行。所以听说以前这个 btsync 挺火的，那后来怎么不火的呢？因为官方觉得使用 dht 技术自己管控不了这个软件，所以在 1.4.111 版本后，就把 dht 功能去掉了。之后的版本如果想通过 bysync 下载资源的话，就得通过官方的服务器，才可以查询到其他用户 IP ，从而进行下载。而再之后，它的服务器在国内被墙了，因此在国内也就基本凉了。</p><p>不过它只是作为资源下载这方面凉了，用来局域网同步还是可以用的，使用的方法都一样，因为这三个软件的关系很微妙。我在 <a href="https://www.appinn.com/verysync/" target="_blank" rel="noopener">小众软件</a> 看到了网友 <strong>哆哆爱焱垚</strong> 的这样一段留言</p><blockquote><p><strong>这个软件我知道，在Resilio Sync时代，发现不能使用时，微力同步的作者一直以小资源站的形式进行着Resilio Sync再度能用的努力，但是后来实在经不住这么折腾就在开源软件Syncthing的基础上自己开发了这款微力同步，而界面的相似真的是为了让当初一批Resilio Sync用户减少适应的难度而高度相似。后来，也是看着作者一步步因为论坛及QQ群网友的要求开发出了适应各个平台的版本。作者一路走来也真的是不容易，也挺高兴他的软件被小编收录到了主站！</strong></p></blockquote><p>这三款应用，简单的同步功能，都可以免费使用。</p><ul><li>syncthing 由于是开源软件，完全免费，但是它没有 IOS 端，而且同步之前需要设备互相添加好友，感觉有点不方便。</li><li>verysync 基于 syncthing 开发的国产闭源软件，IOS 端需要付费购买才可以使用，现在的价格是 ￥12。其它平台可以免费使用，但是有些高级功能，如电脑和 Linux 端的选择同步，需要 Pro 才可以使用，想拥有 Pro 资格，需要 ￥99.</li><li>resilio sync 是闭源商业软件，除了同步功能之外，还可以下载资源。免费版对于个人使用应该也是足够的。</li></ul><p>为了写这篇文章，我把三款应用都通过 docker 装在 N1 上了。</p><p><img src="\img\2020\3-sync-app.png" alt="3-sync-app"></p><p>体验下来还是觉得 verysync 用着比较顺手。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直以来，我都是用安卓手机，特别是小米的手机，已经用了很多年了。一开始的照片也不多，用小米自带的云服务备份即可。后来照片有点多了，小米云服务免费的 5G 空间已经不够用了。&lt;/p&gt;
&lt;p&gt;我开始尝试其它的备份方案，比如电脑和手机都安装 handshaker 这个软件，可以自
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="docker" scheme="https://powersee.github.io/tags/docker/"/>
    
      <category term="ios" scheme="https://powersee.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>树莓派 4B 变身 NAS 服务器</title>
    <link href="https://powersee.github.io/2020/12/raspberrypi-nas/"/>
    <id>https://powersee.github.io/2020/12/raspberrypi-nas/</id>
    <published>2020-12-08T03:18:00.000Z</published>
    <updated>2020-12-13T10:56:40.698Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>树莓派由于体积非常小，只有一张银行卡的大小，而且还支持 WiFi ，所以拿它当服务器也是一个不错的选择。只要找一个有电源的地方，丢在那里就行。</p><p>如果只是当成服务器来使用，可以感兴趣的人会比较少，如果能够在上面装些下载软件，再开启 smb 共享，那么树莓派也是可以当成一台的简单的 NAS 来使用的。</p><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>个人推荐先使用官方系统 raspios , 不建议使用以前的 raspbian ，raspbian 是 32 位的系统，如果有使用 docker 的话，就会知道，32 位的 docker 镜像非常的少。如果可以的话，一定要装 64 位的系统，不管是官方的 raspios 还是 Ubuntu 都行。</p><p>这里我以官方的 raspios 来作为演示。</p><p>下载来源：<a href="https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/" target="_blank" rel="noopener">清华镜像站</a></p><p>由于是当 NAS 使用，建议使用 <a href="https://mirrors.tuna.tsinghua.edu.cn/raspberry-pi-os-images/raspios_lite_arm64/images/raspios_lite_arm64-2020-08-24/2020-08-20-raspios-buster-arm64-lite.zip" target="_blank" rel="noopener">lite 版</a></p><p>下载后将里面的 img 镜像解压出来，然后使用镜像写入工具。我使用的是 usb image tools （我的网盘里面有），也可以使用其它的工具，例如 Etcher ，win32diskimager 等等。</p><h3 id="开启-ssh"><a href="#开启-ssh" class="headerlink" title="开启 ssh"></a>开启 ssh</h3><p>镜像写入完成后，如果直接弹出读卡器，然后启动树莓派的话，会发现无法用 ssh 连接。解决的方法也很简单，将内存卡重新插回电脑，在里面建立一个文件夹，名字为 <code>ssh</code></p><p>这样系统启动后就开启 ssh 了。</p><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>备份原来的</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">cp /etc/apt/source<span class="selector-class">.list</span> /etc/apt/source<span class="selector-class">.list</span><span class="selector-class">.bak</span></span><br></pre></td></tr></table></figure><p>/etc/apt/source.list</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian/ buster main contrib non-free</span><br><span class="line"><span class="keyword">deb</span>-src http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian/ buster main contrib non-free</span><br><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian/ buster-updates main contrib non-free</span><br><span class="line"><span class="keyword">deb</span>-src http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian/ buster-updates main contrib non-free</span><br><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian/ buster-backports main contrib non-free</span><br><span class="line"><span class="keyword">deb</span>-src http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian/ buster-backports main contrib non-free</span><br><span class="line"><span class="keyword">deb</span> http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian-security buster/updates main contrib non-free</span><br><span class="line"><span class="keyword">deb</span>-src http<span class="variable">s:</span>//mirrors.tuna.tsinghua.edu.<span class="keyword">cn</span>/debian-security buster/updates main contrib non-free</span><br></pre></td></tr></table></figure><p>/etc/apt/source.list.d/raspi.list</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/raspberrypi/</span> buster main ui</span><br></pre></td></tr></table></figure><p>我使用的是 nano 编辑器，对文本内容进行修改之后，想保存退出，需要按 <code>ctrl + X</code> 退出，然后编辑器会问，是否要保存，按 <code>Y</code> 选择 yes ，再让你确认保存的文件名，按回车键即可。</p><p>更改好源之后，输入</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">apt update</span></span><br></pre></td></tr></table></figure><h3 id="安装常用应用"><a href="#安装常用应用" class="headerlink" title="安装常用应用"></a>安装常用应用</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">apt install vim samba zsh docker<span class="selector-class">.io</span> -y</span><br></pre></td></tr></table></figure><h3 id="挂载硬盘"><a href="#挂载硬盘" class="headerlink" title="挂载硬盘"></a>挂载硬盘</h3><p>将硬盘通过 usb 连接到树莓派，在终端输入</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">lsblk</span></span><br></pre></td></tr></table></figure><p>列出所有可用块设备的信息，例如我的显示</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">NAME        MAJ:MIN RM  SIZE RO<span class="built_in"> TYPE </span>MOUNTPOINT</span><br><span class="line">sda           8:0    0 55.9G  0 disk </span><br><span class="line">├─sda1        8:1    0 53.9G  0 part </span><br><span class="line">├─sda2        8:2    0    1K  0 part </span><br><span class="line">└─sda5        8:5    0    2G  0 part </span><br><span class="line">mmcblk0     179:0    0 14.7G  0 disk </span><br><span class="line">├─mmcblk0p1 179:1    0  256M  0 part /boot/firmware</span><br><span class="line">└─mmcblk0p2 179:2    0 14.5G  0 part /</span><br></pre></td></tr></table></figure><p>我需要挂载 sda1 这个分区，想将它挂载到 /mnt/to 这个目录下，所以我先创建这个文件夹，再进行挂载</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkdir <span class="regexp">/mnt/</span>to</span><br><span class="line">mount <span class="regexp">/dev/</span>sda1 <span class="regexp">/mnt/</span>to</span><br></pre></td></tr></table></figure><p>这种情况下，如果我们重启了机器，那么就得重新挂载硬盘，如果你并不频繁重启机器，这样或许还可以接受。若不是的话，可以了解一下自动挂载。</p><p>首先查看硬盘的 UUID ，可以使用 <code>blkid</code> 命令</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># blkid     </span></span><br><span class="line">/dev/mmcblk0p1: <span class="attribute">LABEL</span>=<span class="string">"system-boot"</span> <span class="attribute">UUID</span>=<span class="string">"85F3-CC2B"</span> <span class="attribute">TYPE</span>=<span class="string">"vfat"</span> <span class="attribute">PARTUUID</span>=<span class="string">"da84cd12-01"</span></span><br><span class="line">/dev/mmcblk0p2: <span class="attribute">LABEL</span>=<span class="string">"writable"</span> <span class="attribute">UUID</span>=<span class="string">"b96d647f-679e-4582-87d0-2d8c7afc91f4"</span> <span class="attribute">TYPE</span>=<span class="string">"ext4"</span> <span class="attribute">PARTUUID</span>=<span class="string">"da84cd12-02"</span></span><br><span class="line">/dev/sda1: <span class="attribute">UUID</span>=<span class="string">"041ff92b-0a5c-49f4-b965-0d3a55ef8284"</span> <span class="attribute">TYPE</span>=<span class="string">"ext4"</span> <span class="attribute">PARTUUID</span>=<span class="string">"0eff14f3-01"</span></span><br><span class="line">/dev/sda5: <span class="attribute">UUID</span>=<span class="string">"b82db7cf-756f-4109-8800-9c0d9bb58810"</span> <span class="attribute">TYPE</span>=<span class="string">"swap"</span> <span class="attribute">PARTUUID</span>=<span class="string">"0eff14f3-05"</span></span><br><span class="line">/dev/mmcblk0: <span class="attribute">PTUUID</span>=<span class="string">"da84cd12"</span> <span class="attribute">PTTYPE</span>=<span class="string">"dos"</span></span><br></pre></td></tr></table></figure><p>这里我想挂载的是 <code>/dev/sda1</code> ，所以我复制它的 UUID <code>041ff92b-0a5c-49f4-b965-0d3a55ef8284</code> 记住它的 type 是 ext4 ，你的有可能是其它的，例如 ntfs 之类。</p><p>编辑 <code>/etc/fstab</code> </p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">nano <span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure><p>在最下面添加一行</p><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">UUID=<span class="number">041</span>ff92b<span class="number">-0</span>a5c<span class="number">-49</span>f4-b965<span class="number">-0</span>d3a55ef8284 /mnt/to ext4 defaults     <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><img src="\img\2020\fstab-nano.png" alt="fstab-nano"></p><p>填好后，按 <code>ctrl + o</code> 保存，回车键确认，再按 <code>ctrl + x</code> 退出。</p><h3 id="设置-smb-共享"><a href="#设置-smb-共享" class="headerlink" title="设置 smb 共享"></a>设置 smb 共享</h3><p>此时我想通过 smb 的方式将硬盘中的内容共享出来，我需要先编辑 samba 的配置文件</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/samba/smb.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>然后在最后添加这么几行</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">to</span>]</span><br><span class="line">    path = /mnt/<span class="keyword">to</span></span><br><span class="line">    browseable = <span class="literal">yes</span> </span><br><span class="line">    guest ok = <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>保存退出，然后重启 smbd</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">service smbd restart</span></span><br></pre></td></tr></table></figure><p>此时在 资源管理器 的 网络 中，点击树莓派对应的设备名，应该就可以看到一个名字为 to 的共享文件夹。由于上面是设置 guest ok ，所以不用身份验证就可以直接打开。</p><p>但这样可能不是你想要的，毕竟任何人都可以直接访问，不安全。能否添加账号密码来验证呢？答案是可以的。</p><p>如果你装的是树莓派的 raspbian 或者 raspios ，默认就有一个 pi 用户，如果你安装的是 Ubuntu ，默认情况下就有一个 ubuntu 用户。那么现在就到 samba 里面添加这个同名用户。</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">smbpasswd -<span class="keyword">a</span> <span class="literal">pi</span></span><br></pre></td></tr></table></figure><p>用 Ubuntu 的</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">smbpasswd -<span class="selector-tag">a</span> ubuntu</span><br></pre></td></tr></table></figure><p>之后会让你设置密码，需要设置两次。会如下面这样显示。</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">New<span class="built_in"> SMB </span>password:</span><br><span class="line">Retype new<span class="built_in"> SMB </span>password:</span><br><span class="line">Added<span class="built_in"> user </span>ubuntu.</span><br></pre></td></tr></table></figure><p>然后我们可以再来修改 smb 配置文件。</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/samba/smb.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>在最后面添加这么几行</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[test]</span><br><span class="line">    path = /mnt/<span class="keyword">to</span>/test</span><br><span class="line">    writable =<span class="literal">yes</span></span><br><span class="line">    valid<span class="built_in"> users </span>= ubuntu</span><br><span class="line">    force create mode = 0644</span><br></pre></td></tr></table></figure><p>保存退出，然后重启 smbd</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">service smbd restart</span></span><br></pre></td></tr></table></figure><p>然后在网络中应该就可以看到名字为 test 的共享文件夹，直接双击打开的话，会要求你输入账号和密码。账号就是 pi 或者 ubuntu ，密码是你刚才自己设置的。</p><p><img src="\img\2020\samba-test-dir.png" alt="samba-test-dir"></p><h3 id="安装我家云导航"><a href="#安装我家云导航" class="headerlink" title="安装我家云导航"></a>安装我家云导航</h3><p>导航下载，在网盘中的【不仅限于盒子】、【贝壳云and我家云】文件夹中。我使用的是 2019 年的旧版导航，用新的应该也可以。</p><p>先进入 <code>/opt</code> 这个目录</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/opt</span></span><br></pre></td></tr></table></figure><p>想安装需要先把导航压缩包传进树莓派，达到这个目的的方法有很多。我使用的终端是 xshell ，我先在树莓派里安装一个 lrzsz</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> lrzsz</span><br></pre></td></tr></table></figure><p>安装完成后，使用 <code>rz</code> 命令，就可以把电脑里的文件，传输到树莓派里面了。</p><p>把 <code>entware_navi.tgz</code> 和 <code>install_navi.sh</code> 这两个文件，传到 <code>/opt</code> 目录下，然后安装脚本执行权限，再执行安装</p><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">chmod +x install_navi.<span class="keyword">sh</span></span><br><span class="line">./install_navi.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>然后等一段时间……</p><p>完成后就可以在浏览器输入树莓派的 ip 来访问这个导航界面了。</p><p><img src="\img\2020\树莓派导航界面.png" alt="树莓派导航界面"></p><p>实测 qb 启动不了，控制台那个是给我家云的 omv 用的，装在其它设备上本来就是没法用的。其它的功能好像都还可以用吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;树莓派由于体积非常小，只有一张银行卡的大小，而且还支持 WiFi ，所以拿它当服务器也是一个不错的选择。只要找一个有电源的地方，丢在那里就行
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="树莓派" scheme="https://powersee.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>树莓派安装 transmission</title>
    <link href="https://powersee.github.io/2020/12/raspberrypi-install-transmission/"/>
    <id>https://powersee.github.io/2020/12/raspberrypi-install-transmission/</id>
    <published>2020-12-06T08:27:34.000Z</published>
    <updated>2020-12-06T09:25:14.982Z</updated>
    
    <content type="html"><![CDATA[<p>安装</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> transmission-daemon</span><br></pre></td></tr></table></figure><p>停止程序，修改配置</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">service transmission-daemon <span class="keyword">stop</span></span><br><span class="line"><span class="keyword">vi</span> /etc/transmission-daemon/settings.json</span><br></pre></td></tr></table></figure><p>使用 vi 打开这个配置文件后，按 <code>i</code> 键进入编辑模式</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">"download-dir"</span>: <span class="string">"/mnt/tr/downloads"</span>,</span><br><span class="line"><span class="string">"rpc-whitelist"</span>: <span class="string">"*"</span>,</span><br></pre></td></tr></table></figure><p>修改这么两行，此时账号和密码没有修改，默认情况下都是 transmission</p><p>修改完成按 <code>ESC</code> 键退出编辑模式，再按 <code>:wq</code> 保存退出。</p><p>接着启动 transmission</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">service transmission-daemon <span class="literal">start</span></span><br></pre></td></tr></table></figure><p>此时在浏览器中输入 树莓派ip:9091 就可以访问 transmission 。</p><p><img src="\img\2020\raspi-tr.png" alt></p><p>此时直接下载种子，应该会报错提示没有写入权限。</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> /mnt/<span class="keyword">tr</span>/downloads</span><br><span class="line"><span class="keyword">chmod</span> <span class="number">777</span> /mnt/<span class="keyword">tr</span>/downloads</span><br></pre></td></tr></table></figure><p>这样应该就可以正常下载了。下载完成后，如果想将下载文件夹通过 smb 共享出来，可以在 <code>/etc/samba/smb.conf</code> 中添加这一段</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[download]</span></span><br><span class="line">   <span class="string">comment</span> <span class="string">=</span> <span class="string">Printer</span> <span class="string">Drivers</span></span><br><span class="line">   <span class="string">path</span> <span class="string">=</span> <span class="string">/mnt/tr/downloads</span></span><br><span class="line">   <span class="string">browseable</span> <span class="string">=</span> <span class="literal">yes</span></span><br><span class="line">   <span class="string">read</span> <span class="string">only</span> <span class="string">=</span> <span class="literal">yes</span></span><br><span class="line">   <span class="string">guest</span> <span class="string">ok</span> <span class="string">=</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p>然后重启 smb</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">smbd restart</span></span><br></pre></td></tr></table></figure><p>此时应该就可以在 win10 的资源管理器中的 【网络】找到树莓派，直接点击应该就可以访问里面的内容。</p><p>我使用的内存卡的闪迪的，32G ，class 10，实测 smb 读取速度在 40MB/s 左右。如果打算长期下载的话，建议还是接一个 usb 硬盘比较好。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; trans
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>贝壳云、我家云以太网口自动从千兆变为百兆</title>
    <link href="https://powersee.github.io/2020/11/bky-wjy-eth-100/"/>
    <id>https://powersee.github.io/2020/11/bky-wjy-eth-100/</id>
    <published>2020-11-26T05:17:45.000Z</published>
    <updated>2020-11-26T05:37:23.264Z</updated>
    
    <content type="html"><![CDATA[<p>偶然间发现，怎么通过 smb 方式从贝壳云上面读取文件，速度只有 11MB/s 左右，上传文件到里面去也是如此。明明前几天从里面复制文件还有 60 多的速度的，怎么无缘无故变慢了？难道现在网口变百兆速度了？</p><p>于是我通过 <code>ifconfig</code> 命令，查看到 eth0 里显示</p><blockquote><p>collisions:0 txqueuelen:100</p></blockquote><p>以及通过 <code>dmesg</code> 命令查到这个</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">687120.156847</span>] rk_gmac-dwmac ff540000.ethernet eth0: Link <span class="keyword">is</span> Down</span><br><span class="line">[<span class="meta">687122.156839</span>] rk_gmac-dwmac ff540000.ethernet eth0: Link <span class="keyword">is</span> Up - <span class="number">1</span>Gbps/Full - flow control rx/tx</span><br><span class="line">[<span class="meta">687126.156737</span>] rk_gmac-dwmac ff540000.ethernet eth0: Link <span class="keyword">is</span> Down</span><br><span class="line">[<span class="meta">687139.156393</span>] rk_gmac-dwmac ff540000.ethernet eth0: Link <span class="keyword">is</span> Up - <span class="number">100</span>Mbps/Full - flow control rx/tx</span><br></pre></td></tr></table></figure><p>看来确实是在某一时刻，以太网的网速从千兆降为百兆了。</p><p>解决方案是，拔网线重插。速度就又恢复千兆了。<code>dmesg</code> 里面也有显示新的日志。</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">1736677.257293</span>] rk_gmac-dwmac ff540000.ethernet eth0: Link <span class="keyword">is</span> Down</span><br><span class="line">[<span class="meta">1736681.257229</span>] rk_gmac-dwmac ff540000.ethernet eth0: Link <span class="keyword">is</span> Up - <span class="number">1</span>Gbps/Full - flow control rx/tx</span><br></pre></td></tr></table></figure><p>我拔下两秒后插回去，ssh 连接没断，smb 也可以继续访问。因此也没什么影响。</p><p>这个问题好像在我家云上面更为明显，我记得之前用我家云的时候也碰到几次，当时还在论坛找到可以恢复千兆的命令，不过现在找不到了。</p><p>因为贝壳云和我家云用的是同样的处理器，可能是硬件的通病吧，暂时也没什么更好的方法，只能发现降为百兆后就去重插一下网线就是了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;偶然间发现，怎么通过 smb 方式从贝壳云上面读取文件，速度只有 11MB/s 左右，上传文件到里面去也是如此。明明前几天从里面复制文件还有 60 多的速度的，怎么无缘无故变慢了？难道现在网口变百兆速度了？&lt;/p&gt;
&lt;p&gt;于是我通过 &lt;code&gt;ifconfig&lt;/code
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>沦为废铁的玩客云还能拿来干什么？</title>
    <link href="https://powersee.github.io/2020/11/wankeyun-flash/"/>
    <id>https://powersee.github.io/2020/11/wankeyun-flash/</id>
    <published>2020-11-20T11:31:53.000Z</published>
    <updated>2021-01-25T02:25:22.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><p>玩客云原本的系统是 Android ，想要刷成 Linux 需要使用双公头 USB 线连接电脑，进行线刷。</p><p>而且似乎还不是直接连接就能刷，需要拆机，短接主板上的两个点。</p><p><img src="\img\2020\玩客云短接.png" alt="玩客云短接"></p><p>我的刷机步骤是先连接双公头 USB 线，然后用镊子按住主板上的两个短接点，电脑打开 USB Burning Tool ，然后玩客云通电。</p><p><img src="\img\2020\玩客云刷机模式.png" alt="玩客云刷机模式"></p><p>虽然网上也能找到可以直接线刷的 armbian 固件，不过我个人还是喜欢先线刷 s805_flash_snail.img 这个镜像。刷入这个之后，玩客云便可以从 U 盘启动系统，因此只要你有多个 U 盘，便可以拥有多个系统。更多的系统镜像可以到 <a href="https://www.right.com.cn/forum/forum-175-1.html" target="_blank" rel="noopener">恩山</a> 上找。</p><p>我目前使用的固件是 <a href="https://www.right.com.cn/forum/thread-4057492-1-1.html" target="_blank" rel="noopener">Armbian 20.10 Buster with Linux 5.9.0-rc7 hdmi docker可用</a> ，先用 U 盘运行，没什么问题之后，再执行 <code>/boot/install/install.sh</code> 将固件写入 emmc 。</p><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>既然刷入了 armbian 了，那它可以和 N1 一样来使用吗？并不能，因为玩客云的 cpu 是 32 位的 ，能用的 docker 镜像相比于 N1 这种 64 位的，会少很多。</p><p>在 docker hub 上面搜镜像时，可以注意一下那些有标 arm 的才可以用。</p><p>玩客云安装 docker 也比较简单，可以直接在终端中输入</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">armbian-<span class="built_in">config</span></span><br></pre></td></tr></table></figure><p>来安装 docker 、samba、transmission 等应用。</p><p>不过有时候好像会装不了，可以试一下用</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> docker.io</span><br></pre></td></tr></table></figure><p>想知道有没有安装成功，可以用这个命令</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> <span class="literal">info</span></span><br></pre></td></tr></table></figure><p>我在玩客云上面尝试了这些 docker 镜像。</p><h3 id="1、博客——typecho"><a href="#1、博客——typecho" class="headerlink" title="1、博客——typecho"></a>1、博客——typecho</h3><p>typecho 是一款国产的 php 博客系统，开源免费，占用资源少，我个人挺喜欢的。不过之前灯大制作的 typecho 镜像不能用在玩客云上，我重新找了一个。</p><p>建议自己建立一个文件夹，用来存放 typecho 的相关文件，方便管理以及以后迁移。我建立在 /root/tyepcho</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /root/tyepcho</span><br></pre></td></tr></table></figure><p>然后便可以建立容器了</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">docker run -d -p <span class="number">80</span><span class="symbol">:</span><span class="number">80</span> --name typecho -v <span class="string">"/root/tyepcho"</span><span class="symbol">:/var/www/html</span> yangxuan8282/<span class="symbol">typecho:</span>php-arm</span><br></pre></td></tr></table></figure><p>此时便可以通过 ip 访问在玩客云里面建立好的博客。</p><h3 id="2、aria2"><a href="#2、aria2" class="headerlink" title="2、aria2"></a>2、aria2</h3><p>这是一个多线程的下载器，也是开源免费的，我们可以使用它来下载一些东西。</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -<span class="ruby">-name aria2-pro \</span></span><br><span class="line"><span class="ruby">    --restart <span class="keyword">unless</span>-stopped \</span></span><br><span class="line"><span class="ruby">    --log-opt max-size=<span class="number">1</span>m \</span></span><br><span class="line"><span class="ruby">    --network host \</span></span><br><span class="line"><span class="ruby">    -e PUID=$UID \</span></span><br><span class="line"><span class="ruby">    -e PGID=$GID \</span></span><br><span class="line"><span class="ruby">    -e RPC_SECRET=<span class="number">12345</span> \</span></span><br><span class="line"><span class="ruby">    -e RPC_PORT=<span class="number">6800</span> \</span></span><br><span class="line"><span class="ruby">    -e LISTEN_PORT=<span class="number">6888</span> \</span></span><br><span class="line"><span class="ruby">    -v ~<span class="regexp">/aria2-config:/config</span> \</span></span><br><span class="line"><span class="ruby">    -v /home/<span class="symbol">powersee:</span>/downloads \</span></span><br><span class="line"><span class="ruby">    p3terx/aria2-pro</span></span><br></pre></td></tr></table></figure><p>我将下载的文件存放在 <code>/home/powersee</code> 中，之后只需要将这个文件夹通过 smb 共享出来，便可以在电脑、手机上面访问里面的内容了。</p><p>此时 aria2 已经在运行了，但是默认情况下，只能使用命令行的方式控制它，这种比较麻烦了。大多数人还是使用网页的来控制的。使用人数比较多是 AriaNg<strong>（如果有打算装浏览器插件的，这部分可以不看）</strong></p><p><a href="https://github.com/mayswind/AriaNg" target="_blank" rel="noopener">https://github.com/mayswind/AriaNg</a></p><p>官方有提供 demo</p><p><a href="http://ariang.mayswind.net/latest" target="_blank" rel="noopener">http://ariang.mayswind.net/latest</a></p><p>访问后添加自己的 aria2 rpc 即可控制 aria2 。其实这个控制面板就是一个 html 网页，可以自己把它下载到电脑上，双击打开就可以。在 GitHub 的 release 中可以下载，同时我也把它上传到网盘里面，方便无法从 GitHub 下载的朋友。（在【不仅限于盒子】——【玩客云】）里面。</p><p><strong>浏览器插件</strong></p><p>Aria2 还可以接管浏览器的下载，例如下载网盘的内容，这个以前百度网盘还可以轻松突破限速的时候，Aria2 经常被用在这方面。</p><p>用 chrome 的可以到商店下载 Aria2 for chrome 这个扩展插件。</p><p>用新版 Edge 的，可以到商店下载 Aria2 for edge</p><p><a href="https://microsoftedge.microsoft.com/addons/detail/aria2-for-edge/jjfgljkjddpcpfapejfkelkbjbehagbh?hl=zh-CN" target="_blank" rel="noopener">https://microsoftedge.microsoft.com/addons/detail/aria2-for-edge/jjfgljkjddpcpfapejfkelkbjbehagbh?hl=zh-CN</a></p><p>使用这个插件，可以让平时用浏览器下载的文件，发送到 aria2 下载，很 idm 很像，都是多线程下载工具，很多时候可以让下载速度快一些。</p><p>但是 idm 只能在 windows 上面使用，而 aira2 大多数平台都可以安装，这样有一个好处，就是假如我的 aria2 是安装在 LInux 服务器上的，例如 N1 、我家云、贝壳云、玩客云 这样的设备上面，那么当我下载速度非常慢的资源，例如没有开会员的百度网盘文件，或者城通网盘文件。我可以将下载发送到 Linux 服务器后，电脑就可以关机了，让任务在 Linux 服务器上面慢慢下载就行。</p><h3 id="3、verysync"><a href="#3、verysync" class="headerlink" title="3、verysync"></a>3、verysync</h3><p>这是一个同步工具，这里使用 docker 来安装</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">back_path=/mnt/verysync</span><br><span class="line">docker run -d \</span><br><span class="line">-<span class="ruby">-restart=<span class="keyword">unless</span>-stopped \</span></span><br><span class="line"><span class="ruby">--name verysync \</span></span><br><span class="line"><span class="ruby">-v $back_path<span class="symbol">:/data</span> \</span></span><br><span class="line"><span class="ruby">-p <span class="number">8886</span><span class="symbol">:</span><span class="number">8886</span> \</span></span><br><span class="line"><span class="ruby">unwenliu/<span class="symbol">verysync:</span>armv7</span></span><br></pre></td></tr></table></figure><p>请将里面的 <code>/mnt/verysync</code> 修改为你自己的</p><h3 id="4、transmission"><a href="#4、transmission" class="headerlink" title="4、transmission"></a>4、transmission</h3><p>这是一个轻量级的 BT 下载工具，有些路由器里面也有内置它，可见其轻量</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -<span class="ruby">d \</span></span><br><span class="line"><span class="ruby">    --name transmission \</span></span><br><span class="line"><span class="ruby">    -p <span class="number">9091</span><span class="symbol">:</span><span class="number">9091</span> \</span></span><br><span class="line"><span class="ruby">    -p <span class="number">51413</span><span class="symbol">:</span><span class="number">51413</span> \</span></span><br><span class="line"><span class="ruby">    -v /mnt/<span class="symbol">tr_data:</span>/data \</span></span><br><span class="line"><span class="ruby">    -e USERNAME=admin \</span></span><br><span class="line"><span class="ruby">    -e PASSWORD=admin \</span></span><br><span class="line"><span class="ruby">    gists/transmission</span></span><br></pre></td></tr></table></figure><p>这里我装了 3.0 版，如果想装 2.94 ，可以将最后一行后面添加标签 <code>:2.94</code> ，变成</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -<span class="ruby">d \</span></span><br><span class="line"><span class="ruby">    --name transmission \</span></span><br><span class="line"><span class="ruby">    -p <span class="number">9091</span><span class="symbol">:</span><span class="number">9091</span> \</span></span><br><span class="line"><span class="ruby">    -p <span class="number">51413</span><span class="symbol">:</span><span class="number">51413</span> \</span></span><br><span class="line"><span class="ruby">    -v /mnt/<span class="symbol">tr_data:</span>/data \</span></span><br><span class="line"><span class="ruby">    -e USERNAME=admin \</span></span><br><span class="line"><span class="ruby">    -e PASSWORD=admin \</span></span><br><span class="line"><span class="ruby">    gists/<span class="symbol">transmission:</span><span class="number">2.94</span></span></span><br></pre></td></tr></table></figure><h3 id="5、qbittorrent"><a href="#5、qbittorrent" class="headerlink" title="5、qbittorrent"></a>5、qbittorrent</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">docker <span class="builtin-name">run</span> -d \</span><br><span class="line">  <span class="attribute">--name</span>=qbittorrent \</span><br><span class="line">  -e <span class="attribute">PUID</span>=1000 \</span><br><span class="line">  -e <span class="attribute">PGID</span>=1000 \</span><br><span class="line">  -e <span class="attribute">TZ</span>=Aisa/Shanghai \</span><br><span class="line">  -e <span class="attribute">WEBUI_PORT</span>=8080 \</span><br><span class="line">  --network host \</span><br><span class="line">  -v /opt/docker/qb/config:<span class="built_in">/config </span>\</span><br><span class="line">  -v /mnt/qb_downloads:/downloads \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  ghcr.io/linuxserver/qbittorrent</span><br></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>后来我还在上面安装了 nginx 和 php ，可以搭建一些简单的网站。</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> nginx php-fpm</span><br></pre></td></tr></table></figure><p>想让 nginx 可以解析 php 网页，需要修改 <code>/etc/nginx/sites-enabled/default</code> 这个配置文件。</p><p>默认情况下，nignx 的站点文件位置在 <code>/var/www/html/</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;刷机&quot;&gt;&lt;a href=&quot;#刷机&quot; class=&quot;headerlink&quot; title=&quot;刷机&quot;&gt;&lt;/a&gt;刷机&lt;/h2&gt;&lt;p&gt;玩客云原本的系统是 Android ，想要刷成 Linux 需要使用双公头 USB 线连接电脑，进行线刷。&lt;/p&gt;
&lt;p&gt;而且似乎还不是直接
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>记一次 vim 报错</title>
    <link href="https://powersee.github.io/2020/10/vim-error/"/>
    <id>https://powersee.github.io/2020/10/vim-error/</id>
    <published>2020-10-02T12:22:54.000Z</published>
    <updated>2020-11-20T10:32:15.473Z</updated>
    
    <content type="html"><![CDATA[<p>vim 是我在 Linux 上面最常用的编辑器，如果想要更好地使用它，需要对它进行一些设置。具体的方法是修改用户目录下的 <code>.vimrc</code> ，默认情况下需要自己创建这个文件。</p><p>在里面添加这些设置，下次打开 vim 就能看到效果。例如（ <code>&quot;</code> 是注释符号）</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">nu</span> <span class="comment">"显示行数</span></span><br><span class="line"><span class="keyword">set</span> showmatch <span class="comment">"显示匹配的括号([&#123;和&#125;])</span></span><br><span class="line"><span class="keyword">set</span> hlsearch <span class="comment">"高亮显示搜索的内容</span></span><br><span class="line"><span class="comment">"...</span></span><br></pre></td></tr></table></figure><p>但是我有很多台 Linux 设备，每一台都自己去写一遍配置就太累了吧。于是我想把这个文件放在 gitee 上（ GitHub 有时连接不太上），之后其它的机器，只需要把这个文件下载下来即可。当然我还想放一些其它的配置，所以我新建一个 dotfiles 仓库，在里面放一些配置文件。</p><p>我直接在 gitee 上面新建仓库，用 readme 初始化，然后新建文件，将 vim 配置复制粘贴进去。</p><p>此时我在新设备上，就不只是单纯下载 <code>.vimrc</code> 这个文件了，我把整个 dotfiles 仓库克隆的 <code>/home</code> 目录下。然后用软链接的方式，将用户目录下的 <code>.vimrc</code> 指向 <code>/home/dotfiles/.vimrc</code> </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /home/dotfiles/.vimrc ~/.vimrc</span><br></pre></td></tr></table></figure><p> 之后如果我这个仓库更新了，我直接在 <code>/home/dotfiles/</code> 这个目录下用 <code>git pull</code> 更新即可。</p><p>但是这时我发现用 vim 报错了，每次使用都会输出</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Error detected while processing /root/.vimrc:</span><br><span class="line">line    3:</span><br><span class="line">E474: Invalid argument: encoding=utf-8^M</span><br><span class="line">line    8:</span><br><span class="line">E488: Trailing characters: number^M</span><br><span class="line">line    9:</span><br><span class="line">E488: Trailing characters: wildmenu^M</span><br><span class="line">line   10:</span><br><span class="line">E488: Trailing characters: autoread^M</span><br><span class="line">line   11:</span><br><span class="line">E488: Trailing characters: autoindent^M</span><br><span class="line">line   13:</span><br><span class="line">E474: Invalid argument: tabstop=4^M</span><br><span class="line">line   14:</span><br><span class="line">E539: Illegal character &lt;^M&gt;: mouse=a^M</span><br><span class="line">line   15:</span><br><span class="line">E492: Not an editor command: ^M</span><br><span class="line">line   18:</span><br><span class="line">E15: Invalid expression: has("autocmd")                                                          ^M</span><br><span class="line">line   22:</span><br><span class="line">E171: Missing :endif</span><br><span class="line">Press ENTER or type command to continue</span><br></pre></td></tr></table></figure><p>看来关键错误在于 ^M ，Google 一下，很快就发现问题所在了。因为用 gitee 创建的文件，使用的 <code>fileformat</code> 是 dos ，为了验证这个，我后来又在 gitee 创建一个 <code>.alias</code> 文件，拉取到 Linux 后，用 vim 打开这个文件，后看到底部显示</p><blockquote><p>“.alias” [noeol] [dos] 3L, 68C</p></blockquote><p>也可以使用 <code>set ff?</code> 命令来查看，在默认状态下，输入 <code>:</code>，再输入这条命令即可看到。</p><p>知道问题所在了，解决方法也很简单，用 vim 打开这个文件，将 <code>fileformat</code> 改为 <code>unix</code> 即可。</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">:<span class="builtin-name">set</span> <span class="attribute">ff</span>=unix</span><br></pre></td></tr></table></figure><p>保存，退出。</p><p>此时 vim 就可以正常读取配置文件了。但是这么搞也不是办法啊，每台设备都去转换一下格式？那也够累的。于是我尝试在 GitHub 上创建文件看看，结果发现直接在 GitHub 网页上面创建的文件，<code>fileformat</code>  默认就是 <code>unix</code> ，看来还是切换到 GitHub 吧。</p><p>项目：<a href="https://github.com/powersee/dotfiles.git" target="_blank" rel="noopener">https://github.com/powersee/dotfiles.git</a></p><p><code>.alias</code>文件也可以像 <code>.vimrc</code> 那样软链接到用户目录下，也可以不用，在 <code>.zshrc</code> or <code>.bashrc</code> 中，添加</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source /home/dotfiles/.alias</span><br></pre></td></tr></table></figure><p>即可。</p><p>这个的作用是自定义一些命令，少打些字。例如用 d 代替 docker，用 di 代替 docker images 。</p><p>完</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vim 是我在 Linux 上面最常用的编辑器，如果想要更好地使用它，需要对它进行一些设置。具体的方法是修改用户目录下的 &lt;code&gt;.vimrc&lt;/code&gt; ，默认情况下需要自己创建这个文件。&lt;/p&gt;
&lt;p&gt;在里面添加这些设置，下次打开 vim 就能看到效果。例如（ &lt;
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>在 Linux 上挂载 NFS</title>
    <link href="https://powersee.github.io/2020/10/mount-nfs-in-linux/"/>
    <id>https://powersee.github.io/2020/10/mount-nfs-in-linux/</id>
    <published>2020-10-01T02:22:03.000Z</published>
    <updated>2020-11-20T10:32:15.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>NFS 是 Network File System 的缩写。和 smb 相似，可以将服务器中的某个文件夹共享出来，让其它设备可以访问里面的内容。</p><p>我们知道 smb 共享可以挂载在 Windows 电脑上，当一块网络硬盘来使用。</p><p><img src="\img\2020\smb-mount.png" alt="smb-mount"></p><p>NFS 也同样可以，于是我想把 贝壳云 上面连接的 10T 硬盘，通过 NFS 共享，挂载在刷了 armbian 的 N1 上面，这样我两台设备都可以使用这块硬盘，提高利用效率。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>贝壳云上我刷的是小钢炮系统，里面可以直接开启 NFS ，需要先设置共享。</p><ul><li>export dir 想要共享的目录</li><li>hosts allow 允许访问的 IP 地址，这里我填 N1 的 IP 地址</li><li>nfs option 使用默认 <code>rw,sync,root_squash,all_squash,insecure,no_subtree_check</code></li></ul><p>nfs 和 smb 不同，不能设置用账号密码访问，只能设置让某个 IP 访问。如果想让局域网的所有人都可以访问，假设路由器的 IP 是 <code>192.168.1.1</code>，那么这里可以填 <code>192.168.1.0/24</code>，指的是 IP 地址以 <code>192.168.1</code> 开头的用户都可以访问。</p><p>设置好后，切换的 armbian ，用 ssh 连接设备，查看一下 贝壳云 nfs 的共享权限</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">showmount -e beikeyun</span></span><br></pre></td></tr></table></figure><p>这里的 <code>beikeyun</code> 也可以使用内网 IP</p><p>确定 N1 拥有访问权限之后，便可以开始挂载了。此时我想把 贝壳云 上的 <code>/media/x</code> 挂载到 N1 的 <code>/media/x</code> 上，我需要先在 N1 上创建这个文件夹</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /media/x</span><br></pre></td></tr></table></figure><p>之后在 N1 上安装 nfs 客户端</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">sudo</span> apt install nfs-<span class="meta">common</span></span><br></pre></td></tr></table></figure><p>之后挂载</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">mount -t nfs <span class="string">beikeyun:</span><span class="regexp">/media/</span>x <span class="regexp">/media/</span>x</span><br></pre></td></tr></table></figure><p>没有报错便是挂载成功。此时已经可以查看 10T 硬盘里面的内容</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ls</span> <span class="string">/media/x</span></span><br></pre></td></tr></table></figure><p>完</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;NFS 是 Network File System 的缩写。和 smb 相似，可以将服务器中的某个文件夹共享出来，让其它设备可以访问里面的内
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>如何将文件传输到另外一台 Linux 设备上</title>
    <link href="https://powersee.github.io/2020/09/transfer-in-linux/"/>
    <id>https://powersee.github.io/2020/09/transfer-in-linux/</id>
    <published>2020-09-23T07:20:36.000Z</published>
    <updated>2020-11-20T10:32:15.472Z</updated>
    
    <content type="html"><![CDATA[<p>在 Linux 中，如何将文件从当前机器，传输到另外一台机器呢？用 U 盘、移动硬盘、网盘？可以是可以，不过要是用的是服务器，而且要传输的文件数量比较多，这样操作起来就比较麻烦了。还有其它方法吗？</p><h3 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h3><p>或许用 <code>tar</code> 先将文件打包成一个压缩包，传输到另外一台机器后，再解压也是不错的选择。</p><h3 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h3><p>也可以使用 <code>scp</code> 来传输。例如，我现在有两台机器</p><ul><li>A：192.168.1.4</li><li>B：192.168.1.5</li></ul><p>我先通过 <code>ssh</code> 连接到 A 这台机器上，我想把 <code>/tmp/a.txt</code> 这个文件，传输到 B 这台机器上的 <code>/tmp</code> 文件夹中，我可以用这个命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">scp /tmp/a.txt root@192.168.1.5:/tmp</span><br></pre></td></tr></table></figure><p>这里我是用 root 这个身份登录 B 这台机器。而且用的是 <code>22</code> 这个默认端口，如果机器的 ssh 是使用其它端口，得用 -p 这个参数。变成这样</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">scp -<span class="selector-tag">p</span> <span class="number">6655</span> /tmp/<span class="selector-tag">a</span><span class="selector-class">.txt</span> root@<span class="number">192.168</span>.<span class="number">1.5</span>:/tmp</span><br></pre></td></tr></table></figure><p>如果传输的是文件夹，则需要加 <code>-r</code> 参数</p><h3 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h3><p>rsync 是更好的选择，它把整个文件夹复制过去时，可以同步其所有者和用户组，而不需要像 scp 那样复制后再自己用 <code>chown</code> 和 <code>chgrp</code> 去修改。同时它也会同步文件的属性，如创建日期这些信息过去。</p><p>使用方法如下</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">rsync -av /tmp/one root<span class="variable">@192</span>.<span class="number">168.1</span>.<span class="number">5</span><span class="symbol">:/tmp</span></span><br></pre></td></tr></table></figure><p>便可以将当前机器的 <code>one</code> 这个文件或者文件夹，传输到 B 这台机器的 <code>/tmp</code> 文件夹下，而且其文件属性不会改变。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 Linux 中，如何将文件从当前机器，传输到另外一台机器呢？用 U 盘、移动硬盘、网盘？可以是可以，不过要是用的是服务器，而且要传输的文件数量比较多，这样操作起来就比较麻烦了。还有其它方法吗？&lt;/p&gt;
&lt;h3 id=&quot;tar&quot;&gt;&lt;a href=&quot;#tar&quot; class=
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>为签到平台添加获取 Cookie 功能 GetCookies</title>
    <link href="https://powersee.github.io/2020/09/GetCookies-for-qiandao/"/>
    <id>https://powersee.github.io/2020/09/GetCookies-for-qiandao/</id>
    <published>2020-09-06T18:09:51.000Z</published>
    <updated>2020-11-20T10:32:15.454Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>以前使用 qiandao.today 的时候，我就一直使用 GetCookies 这个浏览器插件，没用它之前，我需要去打开特定的网站，按 F12 查找 cookie ，复制粘贴。有了它，这整个过程将被简化为，在网页中点两下。</p><p>这是一个开源的 chrome 插件，原项目地址：<a href="https://github.com/acgotaku/GetCookies" target="_blank" rel="noopener">https://github.com/acgotaku/GetCookies</a></p><p>现在这个插件已经被 chrome 下架，要使用只能手动安装。然而它默认情况下是只能给 qiandao.today 这个网站用的，我们自己的搭建的签到平台，是没法使用这个插件的。</p><p>如果你想让它可以在你的签到平台上面使用，需要做一些修改，我是通过 <a href="https://github.com/acgotaku/GetCookies/issues/2" target="_blank" rel="noopener">Github Issues</a> 找到解决方案的。</p><p>更改后项目：<a href="https://github.com/powersee/GetCookies" target="_blank" rel="noopener">https://github.com/powersee/GetCookies</a></p><h3 id="更改过程"><a href="#更改过程" class="headerlink" title="更改过程"></a>更改过程</h3><p>首先需要把插件下载到电脑，可以通过 git clone ，也可以直接 download 。之后需要修改两个地方：</p><p>·<strong>mainfest.json</strong></p><p>将第 8 行的</p><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"><span class="string">"matches"</span>: [ <span class="string">"https://qiandao.today/*"</span>]</span><br></pre></td></tr></table></figure><p>修改为自己的网站，如果有多个的话，可以使用 <code>,</code> 区分，例如</p><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"><span class="string">"matches"</span>: [ <span class="string">"https://qiandao.powersee.top/*"</span>,<span class="string">"http://192.168.123.242:9527/*"</span>]</span><br></pre></td></tr></table></figure><p>·<strong>background.js</strong></p><p>去掉第 3 行中判断网址是否包含 qiandao.today 的语句，即改为</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (changeInfo.<span class="built_in">status</span> === <span class="string">'loading'</span>) &#123;</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>修改完成后，在浏览器中选择【扩展程序】，【加载已解压的扩展程序】，选择插件所在的文件夹即可。</p><p>判断插件有没有成功加载，可以通过查看 console 中有没有打印出 onload 来判断。</p><p>网站中一键获取 Cookie 效果如图</p><p><img src="\img\2020\getCookies.png" alt="getCookies"></p><hr><p>这次的排查过程挺特别的，之前我尝试过，直接将网址改为 * ，这样所有网站都可以使用这个插件，但结果发现没效果。</p><p>于是尝试改为配置局域网的网站，即</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">192<span class="selector-class">.168</span>.*</span><br></pre></td></tr></table></figure><p>也没有效果……</p><p>想不出原因，就搁置了。今天装门下载了个 360 极速浏览器，来测试一下是不是修改后在 chrome 浏览器里面没效果，其它浏览器里就有呢？</p><p>一番折腾后发现，只有网址写完整，才有效果，可以在网址后用 * ，但是不能在网址中用。</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//192.168.123.242:9527/*   # 可</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//192.168.123.*   # 不可</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;以前使用 qiandao.today 的时候，我就一直使用 GetCookies 这个浏览器插件，没用它之前，我需要去打开特定的网站，按 F
      
    
    </summary>
    
    
      <category term="网络" scheme="https://powersee.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>在 N1、我家云搭建 discuz 论坛</title>
    <link href="https://powersee.github.io/2020/09/discuz-in-N1/"/>
    <id>https://powersee.github.io/2020/09/discuz-in-N1/</id>
    <published>2020-09-06T08:44:16.000Z</published>
    <updated>2020-11-20T10:32:15.462Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>为了更好地讲解，如何为 qiandao 这个全自动签到平台，制作签到模板，我打算搭建一个 discuz 论坛来演示。本次使用的设备是 斐讯N1，因为之前把它刷成 Ubuntu 系统，再装上 乘风大佬 制作的导航（详情请看：<a href="/2020/03/n1-armbian-server">打造最具性价比服务器 N1-armbian</a>），所以现在它是一个 lnmp 环境，添加多一个网站也很容易。</p><p>当然，用 <code>我家云</code>、<code>S905电视盒子</code> 也可以，这两个我之前也介绍过怎么在上面安装 armbian 并使用 乘风大佬 制作的导航。</p><p>下面开始具体操作流程</p><h3 id="一、下载网站源码"><a href="#一、下载网站源码" class="headerlink" title="一、下载网站源码"></a>一、下载网站源码</h3><p><a href="https://gitee.com/3dming/DiscuzL/attach_files" target="_blank" rel="noopener">https://gitee.com/3dming/DiscuzL/attach_files</a></p><p>官方的源码放在 gitee 上面，下载需要有账号。为了方便其他人下载，我将最新版的下载后传到网盘中了。网盘：<a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a> </p><blockquote><p>在【Web相关】文件夹中</p></blockquote><h3 id="二、上传到设备内"><a href="#二、上传到设备内" class="headerlink" title="二、上传到设备内"></a>二、上传到设备内</h3><p>需要用到的是压缩包中的 upload 文件夹，你可以选择在电脑上解压，然后再传入 N1，可以用 smb 、ftp、scp 等方式传输。</p><p>也可以直接将压缩包先传到 N1 里面。然后使用 unzip 命令解压（建议先建立一个空文件夹，将压缩包放里面），之前再用 mv 命令将 upload 文件夹移动到你想要放的位置。这里顺便改一下文件夹名。</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">mv</span> upload /<span class="meta">opt</span>/wwwroot/discuz</span><br></pre></td></tr></table></figure><h3 id="三、修改-nginx-的配置文件"><a href="#三、修改-nginx-的配置文件" class="headerlink" title="三、修改 nginx 的配置文件"></a>三、修改 nginx 的配置文件</h3><p>先进入配置所在的位置</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cd <span class="regexp">/opt/</span>etc<span class="regexp">/nginx/</span>vhost</span><br></pre></td></tr></table></figure><p>把 h5ai 的配置文件复制一份给 discuz 用，然后手动编辑这份配置</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cp</span> h5ai.<span class="keyword">conf</span> discuz.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">vim</span> discuz.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>我将它修改为这样</p><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">server</span> &#123;</span><br><span class="line">     listen <span class="number">8188</span>;</span><br><span class="line">     server_name localhost;</span><br><span class="line">     root /opt/wwwroot/discuz/;</span><br><span class="line">     <span class="keyword">index</span>  <span class="keyword">index</span>.html  <span class="keyword">index</span>.php  /_h5ai/<span class="keyword">public</span>/<span class="keyword">index</span>.php;</span><br><span class="line">     include /opt/etc/nginx/conf/php-fpm.conf;</span><br><span class="line">    <span class="meta">#otherconf</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>主要就是修改第二和第四行</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">listen</span> <span class="number">8188</span>; <span class="comment">#端口可以自己设置，但是不能和其它重复</span></span><br><span class="line"><span class="attribute">server_name</span> localhost; <span class="comment">#有域名的话是在这里设置</span></span><br><span class="line"><span class="attribute">root</span> /opt/wwwroot/discuz/; <span class="comment"># 网站源码所在的文件夹路径</span></span><br></pre></td></tr></table></figure><p>改好后，让 Nginx 重新读取一下配置</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">/opt/sbin/nginx</span> -s <span class="keyword">reload</span></span><br></pre></td></tr></table></figure><h3 id="四、安装"><a href="#四、安装" class="headerlink" title="四、安装"></a>四、安装</h3><p>然后你到浏览器打开 N1 的 IP:8188</p><p>就可以看到 discuz 的安装界面。</p><p><img src="\img\2020\discuz-install.png" alt="discuz-install"></p><p>但是你有可能会碰到提示不可写的情况</p><p><img src="\img\2020\不可写.png" alt="不可写"></p><p>这时就需要修改权限了</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">chmod</span> -R <span class="number">777</span> /<span class="meta">opt</span>/wwwroot/discuz</span><br></pre></td></tr></table></figure><p>然后再刷新一下网页应该就可以了</p><p>接着来到这一步，数据库密码改为 <code>123456</code></p><p><img src="\img\2020\discuz-database.png" alt="discuz-database"></p><p>然后就可以按下一步安装了。</p><p>这样应该就可以顺利使用了。</p><h3 id="五、卸载"><a href="#五、卸载" class="headerlink" title="五、卸载"></a>五、卸载</h3><p>删除 nginx 配置和网站源码</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">rm <span class="meta-keyword">/opt/</span>etc<span class="meta-keyword">/nginx/</span>vhost/discuz.conf</span><br><span class="line">rm -rf <span class="meta-keyword">/opt/</span>wwwroot/discuz</span><br></pre></td></tr></table></figure><p>删除数据库</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">/opt/bin/mysql -uroot -p</span><br><span class="line"># 输入密码 123456</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> ultrax;</span><br></pre></td></tr></table></figure><p>完成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;为了更好地讲解，如何为 qiandao 这个全自动签到平台，制作签到模板，我打算搭建一个 discuz 论坛来演示。本次使用的设备是 斐讯N
      
    
    </summary>
    
    
      <category term="网络" scheme="https://powersee.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="服务器" scheme="https://powersee.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>搭建自动签到平台——qiandao</title>
    <link href="https://powersee.github.io/2020/09/qiandao-docker/"/>
    <id>https://powersee.github.io/2020/09/qiandao-docker/</id>
    <published>2020-09-05T09:37:26.000Z</published>
    <updated>2020-11-20T10:32:15.470Z</updated>
    
    <content type="html"><![CDATA[<p>Github 项目：<a href="https://github.com/AragonSnow/qiandao" target="_blank" rel="noopener">https://github.com/AragonSnow/qiandao</a></p><p>本文主要介绍 docker 安装法</p><p>不定时上传一些模板到网盘中，网盘地址：<a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a></p><h3 id="一、导入镜像"><a href="#一、导入镜像" class="headerlink" title="一、导入镜像"></a>一、导入镜像</h3><p>直接拉取镜像，可以使用下面这行命令</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> pull asdaragon/qiandao</span><br></pre></td></tr></table></figure><p>拉取不了镜像的，可以使用我放到网盘中的镜像 <a href="http://pan-yz.chaoxing.com/share/info/b63ab64054fc6e0a" target="_blank" rel="noopener">超星网盘地址</a></p><p>百度网盘链接：<a href="https://pan.baidu.com/s/1CteLUgJQR_Rz7Sh3G4E0Pw" target="_blank" rel="noopener">https://pan.baidu.com/s/1CteLUgJQR_Rz7Sh3G4E0Pw</a><br>提取码：6666</p><p>下载后是一个 tar 结尾的文件，可以通过 portainer 将它导入机器里。如果你的机器里没有装 portainer ，就得在命令行中导入了。可以通过 smb 、ftp 、scp 等方式，将文件传入到机器里，之后，在终端中，cd 到文件所在的目录。</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">docker load -<span class="selector-tag">i</span> qiandao.tar</span><br></pre></td></tr></table></figure><p>就可以导入镜像。</p><h3 id="二、创建和启动容器"><a href="#二、创建和启动容器" class="headerlink" title="二、创建和启动容器"></a>二、创建和启动容器</h3><ol><li>在 portainer 中创建容器</li></ol><p><img src="\img\2020\创建容器.png" alt="创建容器"></p><ol start="2"><li>在群晖中创建容器</li></ol><p>打开【docker】图标，【映像】，选择 qiandao ，【启动】，【高级设置】</p><p><img src="\img\2020\群晖创建qiandao容器.png" alt="群晖创建qiandao容器">设置一下端口就行，之后 【下一步】，【应用】。</p><h3 id="三、使用服务器创建容器"><a href="#三、使用服务器创建容器" class="headerlink" title="三、使用服务器创建容器"></a>三、使用服务器创建容器</h3><blockquote><p>要想进行下面的操作，需要有一个服务器，如果你没有的话， <a href="https://www.vultr.com/?ref=8161953-4F" target="_blank" rel="noopener">点此链接注册充值 10 美元送 50 美元</a><br>送的 50美元只有一个月的有效期。（所以不要省，开贵点的机器吧）</p></blockquote><blockquote><p>使用这家的服务器，是因为它可以随时的删除，不像其它的，一买就得一年。而且，这家还可以选择自动安装 docker ，又节省了一些时间。</p></blockquote><ol><li>点击左边的 billing</li><li>充值方式支持 <strong>支付宝</strong> <strong>微信</strong>（但最少 10 美元）</li><li>充值好后 ，点右边那个 <strong>+</strong> 的圆圈</li><li>然后选择服务器的<strong>地区</strong>（日本和新加坡会比较快，不过有可能连接不上，选美国也可以。韩国好像是最近才有的，可以试试。）</li><li><strong>Server Type</strong>点 <strong>application</strong> ，里面就有 <strong>docker</strong></li><li><strong>Server Size</strong> 就是服务器的配置，越高就越贵。（如果有赠送的 50 美元，那就选那个 40 美元的吧，反正你不花，下个月也没了）</li><li>把下面的 <strong>Enable IPv6</strong> 前面的 框 打钩✅（可以使我们下载时连接到更多的用户）</li><li>然后点击右下角的 deploy now<ol start="9"><li>等待几分钟……</li><li>就可以看到服务器部署好了，给了一个 ip 地址。</li></ol></li></ol><p>等待服务器装好系统，然后可以用 xshell 之类的工具，连接服务器。主要用到服务器的 ip ，用户名，密码。</p><p>连接服务器后，我们便可以在终端中拉取镜像</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> pull asdaragon/qiandao</span><br></pre></td></tr></table></figure><p>建立容器</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">run</span> -d <span class="comment">--name qiandao -p 9527:80 asdaragon/qiandao</span></span><br></pre></td></tr></table></figure><p>此时用的端口是 9527，然后在浏览器中输入 ip:9527，例如 <code>132.123.22.33:9527</code> 这样的格式，就可以访问签到平台。</p><p>使用服务器的好处是，你订阅公共模板应该不会出现什么问题。而已，你可以将你搭建的签到网站，分享给你的朋友，这样这个平台就可以多人使用。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>最简单的使用方法是用别人写好的模板，然后根据要求，看是要 cookie ，还是要账号密码，根据要求给对应的内容即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Github 项目：&lt;a href=&quot;https://github.com/AragonSnow/qiandao&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/AragonSnow/qiandao&lt;/a&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="docker" scheme="https://powersee.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>对于掌阅精选的一些研究</title>
    <link href="https://powersee.github.io/2020/08/about-zyjx/"/>
    <id>https://powersee.github.io/2020/08/about-zyjx/</id>
    <published>2020-08-05T14:33:23.000Z</published>
    <updated>2020-11-20T10:32:15.460Z</updated>
    
    <content type="html"><![CDATA[<p>由于我购买了两台掌阅F1手机，来参加阅读 180 天，购买金额全返回的活动。所以最近也就接触了 掌阅精选 这款app，使用了也有一段时间了，也算有了一些了解。</p><p>首先，它的账号和掌阅的账号是不通用的，不过如果你之前的手机号注册过掌阅，现在注册掌阅精选，系统监测到你是掌阅老用户，会赠送一些虚拟币给你购买书籍。像我的话是赠送了 50 个，相当于人民币 50 块。加上新用户福利，有 10 个币，一共就 60 个了。我用它买了好几本书。</p><p>新用户刚注册的前七天，每天登录可以领取虚拟币，七天一共能领 10 个。而且新人还有购书优惠，第一本书不用钱，所以很多人都去挑选那些很贵的书，卖三四百的那种。像我就有买《世界名著合集》、《银河帝国》。然后第二本书还是有优惠，只需要一分钱，所以感觉掌阅精选为了拉取新用户，下的力度还是挺大的。</p><p>我之前以为掌阅精选也可以每天签到，靠签到得到的赠送币来购买书，这样不就可以一直不花钱来看书了吗？不过。。。只有新人的前七天才有，七天后就只剩下一种方式来获取赠送币了– <strong>阅读时长</strong>。每个星期，星期一开始、星期日结束，只要你阅读30分钟，就可以兑换一个赠送币，<strong>每周最多10个</strong>，也就是阅读5个小时。</p><p>而兑换来的赠送币的有效期是<strong>一个月</strong>，我8月2日兑换了10个，从【账户】里面查到有效期是到 9 月 1 日。所以这样算，一个月最多可以积累50个，购买那些非合集的书一般是够的。</p><blockquote><p>掌阅精选领取赠送币之后，分享到微信，让账号和小程序绑定，赠送币还能翻倍。本来这星期阅读满5个小时，领取了十个赠送币，分享之后，又领取了10个。经过测试，第二个星期继续分享，还能再领另外10个。这也就意味着，每个星期可以领取20个赠送币，单靠这些，账号里一个月可以积累100个赠送币。</p></blockquote><p>刚才我把 app 升级了一下，现在也有了每天签到的入口了，不过签到得的币很少，连续七天下来也就2.8个。</p><p>有一点我是觉得挺有意思的，掌阅精选里面的书，购买的时候如果不用赠送币，而用真金白银购买，是支持七天内退款的。这就简直不知怎么夸好了，对于大部分书，我相信自己还是能够在七天内看完的， 而且之后打卡活动开始之后，每天都得阅读 30 分钟，七天就是 3 个半小时，或许看一些字数比较多的书，看不完，但是我想，是否能够利用这个规定，我在第六天就退款，然后再买呢？感觉掌阅这样搞很容易被薅羊毛嘛。</p><p>不过我觉得还是不要轻易去尝试比较好，谁知道它会不会也像京东那样，搞一个黑号系统，退款多几次就把你拉进黑号名单。</p><p>也有可能只是因为掌阅精选现在需要拉人头，所以才有这么大的优惠和福利，就像几年前，掌阅那时通过每天的签到，也可以购买很多书的，后来不也不行了。签到给的阅饼变少了，阅饼的使用期限也缩短了，就导致【不花钱也能一直看书】这种现象减少了。</p><p>不过也有可能优惠会一直持续下去吧，毕竟现在竞争这么激烈，想想今年搞【阅读打卡】的，有 京东阅读、咪咕阅读、QQ阅读、国文和当当合作的阅读器、以及本文讲的掌阅，这些都是国内的阅读平台，而用户一共就那么多。你不搞优惠的话，用户可能就被其它平台抢去了。</p><p>刚才去查了一下，阅读时长兑换书币这种活动，谁是最先发明的不知道，但是搞得最火热的应该是微信读书。现在好像是变成时长兑换无限卡了吧，所以感觉这种模式是有可能一直持续下去的。</p><p>而且我还了解到其它两个平台，网易蜗牛和藏书馆。前者每天的第一个小时可以免费阅读，后者的书是通过借阅的，和图书馆一样，书被别人借了，你就没法读，挺有意思的。</p><hr><p>不过这些我都没有多大的兴趣的去注册，我购买了两台掌阅 F1 ，每台需要打卡 180 天，每天半个小时，我接下来将会花费很多时间，在掌阅精选这个 app 上面。所以利用好时长兑换赠书币这个活动，一般也就够用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于我购买了两台掌阅F1手机，来参加阅读 180 天，购买金额全返回的活动。所以最近也就接触了 掌阅精选 这款app，使用了也有一段时间了，也算有了一些了解。&lt;/p&gt;
&lt;p&gt;首先，它的账号和掌阅的账号是不通用的，不过如果你之前的手机号注册过掌阅，现在注册掌阅精选，系统监测到
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="阅读" scheme="https://powersee.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>关于 s905 盒子数码Q5刷 armbian Ubuntu</title>
    <link href="https://powersee.github.io/2020/07/about-s905/"/>
    <id>https://powersee.github.io/2020/07/about-s905/</id>
    <published>2020-07-07T13:22:48.000Z</published>
    <updated>2021-02-12T03:45:17.064Z</updated>
    
    <content type="html"><![CDATA[<p>闲鱼上面 s905 的电视盒子有很多，我买的是 北京数码视讯 Q5 ，这款算是比较出名的了，网上搜也可以找到很多帖子。</p><p>我买来时里面就是破解好的安卓系统了，当成一个普通播放器是没什么问题的。如果你是家里本身就有这台设备的，可以网上查一下怎么破解，其实不能算破解吧，应该叫刷机才对。</p><p>比如我这台后面写的是江苏移动，那它应该是江苏那边的用户办理宽带送的，然后如果宽带到期了，这台设备也就没法用了。因为里面的系统是移动定制的。网上有方案可以把它刷成其它系统，做到废物利用。</p><p>虽然我现在可以正常使用里面的安卓系统，不过我好奇的是怎么把它刷成 Linux 系统。研究之后发现挺简单的。</p><hr><p><strong>需要东西</strong>（在网盘 <a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a> 的【不仅限于盒子】文件夹中）</p><ol><li>Linux 系统镜像（这里使用 Ubuntu 18.04）</li><li>将 img 镜像写入 U 盘或者 tf 卡的工具——usb burning tool</li><li>从安卓系统重启到 Linux 系统软件—— Reboot to libreELEC</li></ol><p>将三样东西准备好，然后用 usb burning tool 将 img 镜像写入 U 盘或者 tf 卡。写入好后，需要修改 dtb ，我们更改  U 盘或者 tf 卡的 <code>uEnv.ini</code> 文件，将里面的第一行修改为</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">dtb_name</span>=/dtb/meson-gxbb-p201.dtb</span><br></pre></td></tr></table></figure><p>保存文件，将 U 盘或者 tf 卡插入机器，开机。</p><p>如果依然是进入到安卓系统的话，那就安装一个上面提到的 <code>Reboot to libreELEC</code> 这个软件，自己想办法把这个 apk 安装包弄到盒子上面装。</p><p>装好打开这个软件，确认，就可以重启进入 Linux 系统。后面的教程和之前的 N1 教程一模一样的，可以去看之前的文章就行。</p><p><a href="/2020/03/n1-armbian-server/">打造最具性价比服务器 N1-armbian</a></p><p>有一个缺点就是，没法驱动 wifi ，我试过里面好几个 dtb ，都没法，尝试用其它版本的固件，也不行，暂时无解，如果有朋友知道怎么解决欢迎告知我一下，可以用下方的邮箱，或者其它平台的私信、留言都可以，感谢。</p><p>视频发出后，感谢网友 @<a href="https://space.bilibili.com/53153092" target="_blank" rel="noopener">栾__</a> 的回复</p><blockquote><p>wifi可以用544的镜像，后来的都没有驱动</p></blockquote><p>于是我通过搜索找到了这篇帖子</p><p><a href="https://www.cnblogs.com/jzgw/p/S905_8189ETV_8189ES_wifi-config.html" target="_blank" rel="noopener">S905/S905X Armbian安装WiFi驱动8189ETV的解决方法</a></p><p>在里面下载了 5.44 的镜像，将 dtb 文件夹里面的 meson-gxbb-p201.dtb 复制到根目录，改名为 dtb.img。</p><p>使用这个镜像不能从 sd 卡启动，只能从 U 盘启动。然后 wifi 我没有成功驱动……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;闲鱼上面 s905 的电视盒子有很多，我买的是 北京数码视讯 Q5 ，这款算是比较出名的了，网上搜也可以找到很多帖子。&lt;/p&gt;
&lt;p&gt;我买来时里面就是破解好的安卓系统了，当成一个普通播放器是没什么问题的。如果你是家里本身就有这台设备的，可以网上查一下怎么破解，其实不能算破解
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>蜗牛星际驱动核显，使用 jellyfin 和 qbittorrent</title>
    <link href="https://powersee.github.io/2020/06/xingjiwoniu/"/>
    <id>https://powersee.github.io/2020/06/xingjiwoniu/</id>
    <published>2020-06-29T02:14:09.000Z</published>
    <updated>2020-11-20T10:32:15.475Z</updated>
    
    <content type="html"><![CDATA[<p>最近入手了一台蜗牛星际，这里记录一些自己踩过的坑。</p><h2 id="驱动核显"><a href="#驱动核显" class="headerlink" title="驱动核显"></a>驱动核显</h2><h3 id="如何替换-lzma-文件"><a href="#如何替换-lzma-文件" class="headerlink" title="如何替换 lzma 文件"></a>如何替换 lzma 文件</h3><p>需要用到 pe ，这里我用的是 wepe</p><p>将pe系统写入U盘，插入蜗牛的usb口，连接键盘鼠标，开机一直按 del 键，进入bios，在最右边选择U盘，进入 pe。</p><p>之后打开桌面的 DG ，选中引导所在的硬盘或者U盘（我的话是将引导放在16G的 msata 硬盘里的）。选择分区1，点右边的浏览文件，可以看到里面有两个文件 <code>extra.lzma</code> 和 <code>extra2.lzma</code> </p><p><img src="\img\2020\驱动核显需要替换的文件.jpg" alt="驱动核显需要替换的文件"></p><p>将这两个文件替换为网盘中的那两个即可。</p><p>网盘：<a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a></p><p>可以右键然后选择【复制文件到当前分区】。</p><p>然后关机，拔掉 pe U盘，再次进入群晖系统，应该就能驱动核显了。</p><h3 id="如何判断已经驱动核显了？"><a href="#如何判断已经驱动核显了？" class="headerlink" title="如何判断已经驱动核显了？"></a>如何判断已经驱动核显了？</h3><p>用 ssh 连接群晖，输入</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ls</span> <span class="string">/dev/dri/</span></span><br></pre></td></tr></table></figure><p>如果能够看到 renderD128 就是驱动了。</p><h2 id="搭建媒体仓库——-jellyfin"><a href="#搭建媒体仓库——-jellyfin" class="headerlink" title="搭建媒体仓库—— jellyfin"></a>搭建媒体仓库—— jellyfin</h2><p>相比于 plex 和 emby ，jellyfin 的优势是调用硬件转码不用钱。</p><p>这里我是使用 docker 来安装的，容器建立时需要有这个命令，才能调用核显</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--device=/dev/dri/renderD128</span><br></pre></td></tr></table></figure><h2 id="BT下载器——qbittorent"><a href="#BT下载器——qbittorent" class="headerlink" title="BT下载器——qbittorent"></a>BT下载器——qbittorent</h2><p>用手动安装的 qb ，没法正常在 chrome 浏览器打开，只能在隐身模式下才能打开。所以我采用 docker   的方式来安装。</p><p>一开始老是没法设置好 /config 映射到宿主机的文件夹的权限，导致 qb 的 web 界面打开后残缺，而且也没法登录。明明我已经把映射的文件夹权限设置为 everyone 了，还是不行。。。</p><p>最后发现最简单的应该是不管 /config 了，只设置 /downloads 的映射就行。就可以正常使用 qb 。</p><p>但是，我不喜欢这样的方式，我还是喜欢把 /config 映射到宿主机的文件夹中。所以我采用命令行的方式来建立 docker 容器。</p><p>需要先确认文件夹的权限，也可以</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod -R 777 /xxx</span><br></pre></td></tr></table></figure><p>来更改文件夹 xxx 的权限。</p><p>如果想要 qb 能连接 ipv6 用户的话，得使用 </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--network host</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近入手了一台蜗牛星际，这里记录一些自己踩过的坑。&lt;/p&gt;
&lt;h2 id=&quot;驱动核显&quot;&gt;&lt;a href=&quot;#驱动核显&quot; class=&quot;headerlink&quot; title=&quot;驱动核显&quot;&gt;&lt;/a&gt;驱动核显&lt;/h2&gt;&lt;h3 id=&quot;如何替换-lzma-文件&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
      <category term="nas" scheme="https://powersee.github.io/tags/nas/"/>
    
  </entry>
  
  <entry>
    <title>关于咪咕 kindle 打卡版</title>
    <link href="https://powersee.github.io/2020/06/migu-kindle/"/>
    <id>https://powersee.github.io/2020/06/migu-kindle/</id>
    <published>2020-06-15T13:49:06.000Z</published>
    <updated>2020-11-20T10:32:15.465Z</updated>
    
    <content type="html"><![CDATA[<p>终究还是按捺不住想薅羊毛的欲望，上了白嫖咪咕版 kindle 的车。虽然跟之前的 海信A5、腾讯口袋阅相比，咪咕的要求低了很多，只需要每天阅读 15 分钟，连续 100 天即可。</p><p>但是，翻车的几率还是挺大的。为了提高成功率，我做了一些研究。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>首先我在网上收集了一些图片。</p><p><img src="\img\2020\小丸子打卡图.jpg" alt="小丸子打卡图"></p><p><img src="\img\2020\红色打卡图-1592296231569.jpg" alt="红色打卡图"></p><p>来两张适合全面屏的</p><p><img src="\img\2020\白嫖打开图-1592296454315.png" alt="白嫖打开图"></p><p><img src="\img\2020\记得打卡.jpg" alt="记得打卡"></p><h3 id="1、锁屏壁纸"><a href="#1、锁屏壁纸" class="headerlink" title="1、锁屏壁纸"></a>1、锁屏壁纸</h3><p>将这些打卡图片设置为锁屏壁纸，这样每次打开手机就能看到。</p><h3 id="2、微信聊天背景图"><a href="#2、微信聊天背景图" class="headerlink" title="2、微信聊天背景图"></a>2、微信聊天背景图</h3><p>还可以设置为微信常聊对象的背景图。</p><h3 id="3、打卡群"><a href="#3、打卡群" class="headerlink" title="3、打卡群"></a>3、打卡群</h3><p>打卡群非常重要，个人认为，建立一个 5-8 个人的微信群，每天打卡完成就到群里报道，如果发现有人晚上 8 点还没打卡，就可以 @ ta 提醒一下。</p><h3 id="4、公众号设置提醒"><a href="#4、公众号设置提醒" class="headerlink" title="4、公众号设置提醒"></a>4、公众号设置提醒</h3><p>公众号 【微定时】可以设置每天定时提醒，我将其置顶，如果当天没有打卡，那个小红点就一直在那里。</p><h3 id="5、每天邮件提醒"><a href="#5、每天邮件提醒" class="headerlink" title="5、每天邮件提醒"></a>5、每天邮件提醒</h3><p>可以利用一个 python 脚本，每天发 Email 给自己，起到提醒作用。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yagmail</span><br><span class="line"></span><br><span class="line">yag = yagmail.SMTP(user=<span class="string">'xxx@163.com'</span>,host=<span class="string">'smtp.163.com'</span>)</span><br><span class="line"></span><br><span class="line">contents = [<span class="string">'记得打卡啊，想想你的 468 '</span>]</span><br><span class="line"></span><br><span class="line">yag.send(<span class="string">'xxxxxx@qq.com'</span>,<span class="string">'签到提醒'</span>,contents)</span><br></pre></td></tr></table></figure><h3 id="6、使用-autojs-脚本自动翻页"><a href="#6、使用-autojs-脚本自动翻页" class="headerlink" title="6、使用 autojs 脚本自动翻页"></a>6、使用 autojs 脚本自动翻页</h3><p>用这个感觉还是有可能被软件检测到，虽然现在手机升级到 miui12 了，可以禁止 咪咕阅读 读取手机里的应用列表，不过感觉还是有危险，最好还是不用为好。</p><h2 id="其它信息"><a href="#其它信息" class="headerlink" title="其它信息"></a>其它信息</h2><h3 id="断网能否统计阅读时间"><a href="#断网能否统计阅读时间" class="headerlink" title="断网能否统计阅读时间"></a>断网能否统计阅读时间</h3><p>刚才测试了一下，在开着飞行模式的状态下看书，能否统计阅读时间？看了十几分钟后，关闭飞行模式，联网。发现时间没有统计。。。然后继续阅读十分钟，再来看统计时间，发现阅读时间变30分钟了。 那看来，断网时也是有统计的，不过显示出来需要一段时间后。所以最好还是保持联网吧。 </p><h3 id="电量"><a href="#电量" class="headerlink" title="电量"></a>电量</h3><p>我这台感觉电量还行吧，一天阅读30分钟，十天下来，电量剩 8%，这还是在联网的状态，如果断网应该还能用更久。</p><h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><p>咪咕应该是用安卓系统，用数据线连接电脑的话，显示的是这样的</p><p><img src="\img\2020\咪咕连接电脑.png" alt="咪咕连接电脑"></p><p>而用普通版 kindle 连接电脑，则显示的是像 U盘那样的。</p><h3 id="支持什么格式的书？"><a href="#支持什么格式的书？" class="headerlink" title="支持什么格式的书？"></a>支持什么格式的书？</h3><p>打开咪咕的 WLAN 传书，可以看到</p><blockquote><p>支持文件格式：</p><p>TXT、EPUB、UMD</p></blockquote><p>所以传入 mobi 格式的书籍是没法用咪咕系统打开的。</p><hr><p>希望可以顺利打完卡下车吧，用了一段时间，感觉咪咕的书还行吧，这些天都能找到感兴趣的来看。现在是6月28日，过几天就能正式打卡了，估计很快就能在闲鱼搜到打卡失败的 kindle 低价抛售了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;终究还是按捺不住想薅羊毛的欲望，上了白嫖咪咕版 kindle 的车。虽然跟之前的 海信A5、腾讯口袋阅相比，咪咕的要求低了很多，只需要每天阅读 15 分钟，连续 100 天即可。&lt;/p&gt;
&lt;p&gt;但是，翻车的几率还是挺大的。为了提高成功率，我做了一些研究。&lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://powersee.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>关于斐讯 R1 智能音响</title>
    <link href="https://powersee.github.io/2020/05/about-R1/"/>
    <id>https://powersee.github.io/2020/05/about-R1/</id>
    <published>2020-05-04T01:24:19.000Z</published>
    <updated>2020-11-20T10:32:15.458Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这款产品是 燕飞利仕 和斐讯合作的产品，应该是2018年推出的。</p><p>这是一款智能音响，可以搭配【斐讯ai】这个 app 来使用，不过，由于斐讯后来翻车了，至今也快两年了。所谓智能音响，也就是可以用语音来控制罢了。但是由于斐讯服务器那边不能用（或者说不稳定）。账号现在没法正常注册，看论坛有人说每天 0 点会开放注册一段时间，由于本人 2017 年时就有了斐讯的账号，也没去尝试能否注册。</p><p>所以很多人就只能把这音响当普通音响来用，音响开机后按三下顶部的按键，就可以打开蓝牙，之后用手机或者电脑连接，听歌或者听有声小说还是不错的。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>不过最近我在拼多多买了这台设备，发现斐讯的服务器还是可以连接的嘛，而且网上有大佬修改了 app ，使得现在没有账号的情况下，也能配置音响的网络，使其连接家中的WIFI。修改版APP下载：<a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a></p><p>但是有些时候，配置网络好了，喊【小讯小讯】，却会提示，未绑定。。。</p><h2 id="这时候有两种解决方案"><a href="#这时候有两种解决方案" class="headerlink" title="这时候有两种解决方案"></a>这时候有两种解决方案</h2><p>一，修改路由器的 dns</p><p>将路由器的 DNS 改为 47.240.76.176</p><p><img src="/img/2020/padavan-dns.jpg" alt="padavan-dns"></p><p>二，自定义 hosts</p><p>在路由器的 hosts 中添加 118.24.249.189  aios-home.hivoice.cn</p><p>在老毛子路由器中</p><p><img src="/img/2020/padavan-hosts.jpg" alt="padavan-hosts"></p><p>在 openwrt 路由器中</p><p><img src="/img/2020/openwrt-hosts.jpg" alt="openwrt-hosts"></p><p>这样做音响才能完成绑定，之后我们就可以使用语音来控制它了。</p><blockquote><p>如果你用的是普通的路由器，那看看哪个地方可以修改 hosts，实在找不到就修改 DNS 吧。  </p></blockquote><hr><p><strong>如果你实在太小白，不会修改 dns 和 hosts ，那就放弃语音控制吧，反正作用也不是那么大。还有很多其它的东西可以折腾的。</strong></p><h2 id="使用-dlna-享受更好的音质"><a href="#使用-dlna-享受更好的音质" class="headerlink" title="使用 dlna 享受更好的音质"></a>使用 dlna 享受更好的音质</h2><p>前段时间，在网上看到这样的话</p><blockquote><p>蓝牙连接是sbc，音效很浑浊，发闷。dlan 才能发挥它真正的音质</p></blockquote><p>为了用上 dlna ，我在论坛中找到在 R1 上面安装 dlna 的方法，同样将资源放在网盘中了：<a href="http://veger.ys168.com/" target="_blank" rel="noopener">http://veger.ys168.com/</a></p><p>装好后，在电脑中就可以选中歌曲，然后将其推送到 R1 上面播放了。</p><p><img src="/img/2020/dlna1.jpg" alt="dlna1"></p><p>后来，有网友提示，其它系统也自带有 dlna 的，不过需要蓝牙打开的状态下才可以用。所以我打开蓝牙后，再来右键歌曲，就可以看到有两个 dlna 了。</p><p><img src="/img/2020/dlna2.jpg" alt="dlna2"></p><p>据说还可以装一个【乐播投屏】也同样有 dlna ，论坛有个帖子分析了各自的优缺点。<a href="https://www.right.com.cn/forum/thread-4017780-1-1.html" target="_blank" rel="noopener">R1音响三大dlna软件对比</a> 不过这个我自己没用，我最多使用的还是 从n1提取的dlna ，因为这个一直保持开启状态，用起来比较方便。</p><h2 id="电脑端-dlna"><a href="#电脑端-dlna" class="headerlink" title="电脑端 dlna"></a>电脑端 dlna</h2><p>用系统自带的播放器固然方便，但是不怎么好用，只能自己把歌曲添加进去，而且还不支持播放 FLAC 的歌曲。</p><p>我想要播放网易云音乐里的歌曲，有没有什么好方法呢？</p><p>那最简单的还是属用蓝牙连接。不过我这里讨论的是 dlna ，那就得用一个第三方软件了，名字是 airfoil ，这是一款付费软件，大家自己网上找吧。在电脑上安装好后，打开时就会搜索你的网络中有哪些 dlna 设备。</p><p><img src="/img/2020/Airfoil.jpg" alt="Airfoil"></p><p>下方可以选择那个设备作为音响，点亮其右侧的图标即可。上方可以选择声音来源，可以像上图那样，将整个系统的声音都输出。也可以像下图这样，只选择将网易云音乐的声音输出。</p><p><img src="/img/2020/Airfoil-netease.jpg" alt="Airfoil-netease"></p><p><strong>注意</strong> 通过 dlna 将声音输出到音响，大概有两秒的延迟，所以……只适合用来听歌，看视频和打游戏是完全没法用的。</p><h2 id="手机端-dlna"><a href="#手机端-dlna" class="headerlink" title="手机端 dlna"></a>手机端 dlna</h2><p>手机这边我一开始只知道小米系统自带的音乐播放器，可以通过 dlna 推送到 R1。不过它有很多缺陷，一次只能播放一首歌，然后就暂停了。而且没法显示播放进度。</p><p>然后我想去找其它支持 dlna 播放的 APP ，谷歌商店试了好几个，没好用的。</p><p>今天下载了个 咪咕音乐 ，想来听听周杰伦的歌，发现它居然可以把歌曲通过 dlna 推送到 R1 上面，而且切歌之后，播放进度就会同步。非常的意外，不过，它也有缺点，就是有时候没法调节 R1 的音量，有时候却可以……</p><p>后来，我发现，在网易云音乐的设置中，将 dlna 功能打开，也可以把歌曲通过 dlna 推送到 R1 上面。这个应该是现在手机端比较好用的了，可以连续播放，可以同步播放进度，还可以通过手机调节 R1 的音量。</p><h2 id="天线"><a href="#天线" class="headerlink" title="天线"></a>天线</h2><p>由于拆机时不小心，把天线弄断了。</p><p><img src="/img/2020/天线断.jpg" alt="天线断"></p><p>导致音响只有放在路由器旁边才能连接到 WiFi ，蓝牙连接距离只有一米左右……于是到淘宝买了条天线，1块4包邮，买来连接上，满血复活。</p><p><img src="/img/2020/tb天线.jpg" alt="tb天线"></p><p>由于不知道到底要买哪一款，我就买了几个，最终发现这个【IPEX 1代】在 R1 上用就刚好适合。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="https://www.right.com.cn/forum/thread-4013529-1-1.html" target="_blank" rel="noopener">R1音箱 小白入门 和目前现状</a></p><p>这篇文章作者用自己的服务器提供绑定服务。</p><p><a href="https://www.cnblogs.com/lome/p/12465328.html#4548078" target="_blank" rel="noopener">https://www.cnblogs.com/lome/p/12465328.html#4548078</a></p><p>这篇教自建服务</p><p><a href="http://www.mz6.net/news/android/12911.html" target="_blank" rel="noopener">http://www.mz6.net/news/android/12911.html</a></p><p>另外一个自建服务的帖子</p><p><a href="https://www.right.com.cn/forum/thread-3285422-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-3285422-1-1.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这款产品是 燕飞利仕 和斐讯合作的产品，应该是2018年推出的。&lt;/p&gt;
&lt;p&gt;这是一款智能音响，可以搭配【斐讯ai】这个 app 来使用，
      
    
    </summary>
    
    
      <category term="设备" scheme="https://powersee.github.io/tags/%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>关于 docker 一些事</title>
    <link href="https://powersee.github.io/2020/04/about-docker/"/>
    <id>https://powersee.github.io/2020/04/about-docker/</id>
    <published>2020-04-26T00:17:59.000Z</published>
    <updated>2020-12-02T07:29:58.213Z</updated>
    
    <content type="html"><![CDATA[<p>有些小伙伴反映 armbian 的 docker，按照小钢炮那篇文章的方法，有一些容器老是无法启动成功。在此开一篇帖子记录一下。当然帖子的内容肯定不仅限于 armbian 。</p><h2 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> docker.io</span><br></pre></td></tr></table></figure><p>判断安装是否成功可以通过 <code>docker info</code> 这个命令查看。</p><h2 id="docker-镜像"><a href="#docker-镜像" class="headerlink" title="docker 镜像"></a>docker 镜像</h2><p>默认情况下 docker 镜像很难拉取，最简单的方案是路由器挂梯子，速度还是挺可以的。没有这个条件的话，就多准备几个镜像源吧。</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">七牛</span><br><span class="line"><span class="symbol">https:</span><span class="comment">//reg-mirror.qiniu.com</span></span><br><span class="line">中科大</span><br><span class="line"><span class="symbol">https:</span><span class="comment">//docker.mirrors.ustc.edu.cn</span></span><br><span class="line">腾讯云</span><br><span class="line"><span class="symbol">https:</span><span class="comment">//mirror.ccs.tencentyun.com/</span></span><br><span class="line">网易</span><br><span class="line"><span class="symbol">http:</span><span class="comment">//hub-mirror.c.163.com/</span></span><br><span class="line">daocloud</span><br><span class="line"><span class="symbol">http:</span><span class="comment">//f1361db2.m.daocloud.io/</span></span><br><span class="line">华为云</span><br><span class="line"><span class="symbol">https:</span><span class="comment">//05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com/</span></span><br></pre></td></tr></table></figure><p>阿里云私有镜像加速。<br>（自己进入<br><a href="https://cr.console.aliyun.com/cn-shenzhen/instances/mirrors" target="_blank" rel="noopener">https://cr.console.aliyun.com/cn-shenzhen/instances/mirrors</a> 用自己的账号登陆，获取属于自己的加速镜像）</p><p>得到的格式是这样的：<a href="https://xxxxxxxx.mirror.aliyuncs.com/" target="_blank" rel="noopener">https://xxxxxxxx.mirror.aliyuncs.com/</a></p><h2 id="关于-qb"><a href="#关于-qb" class="headerlink" title="关于 qb"></a>关于 qb</h2><p>armbian 用小钢炮的配置来建立 qb 容器的话，有一堆的问题，这里我改了一些内容，自己试了几次，应该没什么大问题了。使用的是 4.2.1，想用新的可以去 dockerhub 看→<a href="https://hub.docker.com/r/80x86/qbittorrent/tags" target="_blank" rel="noopener">传送门</a></p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">IMAGE_NAME</span>=<span class="number">80</span>x86/qbittorrent:<span class="number">4.2</span>.<span class="number">1</span>-arm64</span><br><span class="line"><span class="comment">#下面我是将 /media/one 作为下载路径，你自己修改</span></span><br><span class="line"><span class="attr">DOWNLOAD_PATH</span>=/media/<span class="literal">on</span>e/</span><br><span class="line"><span class="attr">QBT_AUTH_SERVER_ADDR</span>=<span class="string">"127.0.0.1"</span></span><br><span class="line"><span class="comment">#下面我是将 /media/one/lib/qb 作为配置文件的路径，你自己修改</span></span><br><span class="line"><span class="attr">QBCONF</span>=/media/<span class="literal">on</span>e/lib/qb</span><br></pre></td></tr></table></figure><p>对上面的部分修改，然后粘贴到 shell 中。</p><p>下面的不用修改，直接复制粘贴就行。</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">docker run -d --name qbittorrent \</span><br><span class="line">        -<span class="ruby">e WEB_PORT=<span class="number">8080</span> \</span></span><br><span class="line"><span class="ruby">        -e BT_PORT=<span class="number">8998</span> \</span></span><br><span class="line"><span class="ruby">        -e QBT_AUTH_SERVER_ADDR=$QBT_AUTH_SERVER_ADDR \</span></span><br><span class="line"><span class="ruby">        --restart <span class="keyword">unless</span>-stopped \</span></span><br><span class="line"><span class="ruby">        --network host \</span></span><br><span class="line"><span class="ruby">        -v $QBCONF/.config/<span class="symbol">qBittorrent:</span>/config \</span></span><br><span class="line"><span class="ruby">        -v $QBCONF/.local/share/data/<span class="symbol">qBittorrent:</span>/data \</span></span><br><span class="line"><span class="ruby">        -v <span class="string">"$DOWNLOAD_PATH"</span><span class="symbol">:/downloads</span> \</span></span><br><span class="line"><span class="ruby">        -v <span class="string">"$DOWNLOAD_PATH"</span><span class="symbol">:<span class="string">"$DOWNLOAD_PATH"</span></span> \</span></span><br><span class="line"><span class="ruby">        --mount type=tmpfs,destination=<span class="regexp">/tmp \</span></span></span><br><span class="line"><span class="ruby">        $&#123;IMAGE_NAME&#125;</span></span><br></pre></td></tr></table></figure><p>将上面这堆在终端中输入后，到 portainer 中查看日志。</p><p><img src="/img/2020/container.jpg" alt="container"></p><p>如果启动成功，最后会出现一个地址，如果不成功，也可以看看具体出现什么问题。</p><p><img src="/img/2020/qb启动成功.jpg" alt="qb启动成功"></p><p>比较常见的问题是，docker 对文件夹没有读写权限。简单粗暴解决方案，给予 777 权限。先在 portainer 中停止 qb 容器，然后在终端执行下面的命令。</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">chmod</span> <span class="number">777</span> -R $QBCONF</span><br><span class="line"><span class="keyword">chmod</span> <span class="number">777</span> -R $DOWNLOAD_PATH</span><br></pre></td></tr></table></figure><p>然后再去启动容器。按理应该就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有些小伙伴反映 armbian 的 docker，按照小钢炮那篇文章的方法，有一些容器老是无法启动成功。在此开一篇帖子记录一下。当然帖子的内容肯定不仅限于 armbian 。&lt;/p&gt;
&lt;h2 id=&quot;docker-安装&quot;&gt;&lt;a href=&quot;#docker-安装&quot; class
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://powersee.github.io/tags/Linux/"/>
    
      <category term="docker" scheme="https://powersee.github.io/tags/docker/"/>
    
  </entry>
  
</feed>
